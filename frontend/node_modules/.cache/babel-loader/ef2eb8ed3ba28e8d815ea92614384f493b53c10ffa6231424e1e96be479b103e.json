{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\manager\\\\Documents\\\\GitHub\\\\taraxa-live-chart\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Web3 from 'web3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [address, setAddress] = useState('');\n  const [data, setData] = useState(null);\n  const [error, setError] = useState('');\n  const [logs, setLogs] = useState([]);\n  const handleFetchData = async () => {\n    setError(''); // Clear previous errors\n    setLogs([]); // Clear previous logs\n    setData(null); // Clear previous data\n\n    if (!address) {\n      setError('Please enter a valid coin address.');\n      return;\n    }\n    try {\n      setLogs(prevLogs => [...prevLogs, 'Initializing Web3...']);\n      const web3 = new Web3('http://37.27.107.225:7777'); // Replace with your node's address\n\n      setLogs(prevLogs => [...prevLogs, `Querying contract at address: ${address}`]);\n      const contractAbi = [\n      // ABI goes here\n      {\n        \"constant\": true,\n        \"inputs\": [],\n        \"name\": \"getData\",\n        \"outputs\": [{\n          \"name\": \"\",\n          \"type\": \"string\"\n        }],\n        \"payable\": false,\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n      }];\n      const contract = new web3.eth.Contract(contractAbi, address);\n\n      // Log available methods for debugging\n      const availableMethods = Object.keys(contract.methods);\n      console.log('Available Methods:', availableMethods);\n      setLogs(prevLogs => [...prevLogs, `Available Methods: ${availableMethods.join(', ')}`]);\n      setLogs(prevLogs => [...prevLogs, 'Fetching contract data...']);\n      const fetchedData = await contract.methods.getData().call(); // Replace with actual method\n      setLogs(prevLogs => [...prevLogs, 'Data fetched successfully!']);\n      setData(fetchedData);\n    } catch (err) {\n      setError(`Error: ${err.message}`);\n      setLogs(prevLogs => [...prevLogs, `Error occurred: ${err.message}`]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '20px',\n      fontFamily: 'Arial, sans-serif'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Taraxa Live Chart Debugger\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: address,\n        onChange: e => setAddress(e.target.value),\n        placeholder: \"Enter Coin Address\",\n        style: {\n          width: '300px',\n          marginRight: '10px',\n          padding: '5px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleFetchData,\n        style: {\n          padding: '5px 10px'\n        },\n        children: \"Fetch Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Logs:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: logs.map((log, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: log\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), data && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Data:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: JSON.stringify(data, null, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"4N1u9lCv9x2pLGlmo8d5nfoxjUQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Web3","jsxDEV","_jsxDEV","App","_s","address","setAddress","data","setData","error","setError","logs","setLogs","handleFetchData","prevLogs","web3","contractAbi","contract","eth","Contract","availableMethods","Object","keys","methods","console","log","join","fetchedData","getData","call","err","message","style","padding","fontFamily","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","width","marginRight","onClick","color","map","index","JSON","stringify","_c","$RefreshReg$"],"sources":["C:/Users/manager/Documents/GitHub/taraxa-live-chart/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Web3 from 'web3';\r\n\r\nconst App = () => {\r\n  const [address, setAddress] = useState('');\r\n  const [data, setData] = useState(null);\r\n  const [error, setError] = useState('');\r\n  const [logs, setLogs] = useState([]);\r\n\r\n  const handleFetchData = async () => {\r\n    setError(''); // Clear previous errors\r\n    setLogs([]);  // Clear previous logs\r\n    setData(null); // Clear previous data\r\n\r\n    if (!address) {\r\n      setError('Please enter a valid coin address.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setLogs((prevLogs) => [...prevLogs, 'Initializing Web3...']);\r\n      const web3 = new Web3('http://37.27.107.225:7777'); // Replace with your node's address\r\n\r\n      setLogs((prevLogs) => [...prevLogs, `Querying contract at address: ${address}`]);\r\n      const contractAbi = [\r\n        // ABI goes here\r\n\t\t{\r\n    \"constant\": true,\r\n    \"inputs\": [],\r\n    \"name\": \"getData\",\r\n    \"outputs\": [{ \"name\": \"\", \"type\": \"string\" }],\r\n    \"payable\": false,\r\n    \"stateMutability\": \"view\",\r\n    \"type\": \"function\"\r\n  },\r\n      ];\r\n\r\n      const contract = new web3.eth.Contract(contractAbi, address);\r\n\r\n      // Log available methods for debugging\r\n      const availableMethods = Object.keys(contract.methods);\r\n      console.log('Available Methods:', availableMethods);\r\n      setLogs((prevLogs) => [...prevLogs, `Available Methods: ${availableMethods.join(', ')}`]);\r\n\r\n      setLogs((prevLogs) => [...prevLogs, 'Fetching contract data...']);\r\n      const fetchedData = await contract.methods.getData().call(); // Replace with actual method\r\n      setLogs((prevLogs) => [...prevLogs, 'Data fetched successfully!']);\r\n      setData(fetchedData);\r\n    } catch (err) {\r\n      setError(`Error: ${err.message}`);\r\n      setLogs((prevLogs) => [...prevLogs, `Error occurred: ${err.message}`]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: '20px', fontFamily: 'Arial, sans-serif' }}>\r\n      <h1>Taraxa Live Chart Debugger</h1>\r\n      <div>\r\n        <input\r\n          type=\"text\"\r\n          value={address}\r\n          onChange={(e) => setAddress(e.target.value)}\r\n          placeholder=\"Enter Coin Address\"\r\n          style={{ width: '300px', marginRight: '10px', padding: '5px' }}\r\n        />\r\n        <button onClick={handleFetchData} style={{ padding: '5px 10px' }}>\r\n          Fetch Data\r\n        </button>\r\n      </div>\r\n\r\n      {error && <p style={{ color: 'red' }}>{error}</p>}\r\n\r\n      <div>\r\n        <h3>Logs:</h3>\r\n        <ul>\r\n          {logs.map((log, index) => (\r\n            <li key={index}>{log}</li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n\r\n      {data && (\r\n        <div>\r\n          <h3>Data:</h3>\r\n          <pre>{JSON.stringify(data, null, 2)}</pre>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}