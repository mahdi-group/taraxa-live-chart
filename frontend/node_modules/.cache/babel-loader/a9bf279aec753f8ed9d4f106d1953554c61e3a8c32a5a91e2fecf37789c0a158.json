{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\manager\\\\Documents\\\\GitHub\\\\taraxa-live-chart\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Web3 from 'web3';\nimport { Line } from 'react-chartjs-2';\nimport { Chart as ChartJS, LineElement, CategoryScale, LinearScale, PointElement, Tooltip, Legend } from 'chart.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(LineElement, CategoryScale, LinearScale, PointElement, Tooltip, Legend);\nconst App = () => {\n  _s();\n  const [address, setAddress] = useState('');\n  const [events, setEvents] = useState([]);\n  const [error, setError] = useState('');\n  const [logs, setLogs] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [chartData, setChartData] = useState(null);\n  const pageSize = 10;\n  const knownPoolAddress = \"0xE9ba4dB22e58D5887fc67dbf8dB2b9516352315e\"; // Replace with the actual pool address\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      if (address) {\n        fetchTransferEvents();\n      }\n    }, 5000); // Poll every 5 seconds\n\n    return () => clearInterval(interval);\n  }, [address]);\n  const fetchTransferEvents = async () => {\n    setError('');\n    setLogs([]);\n    if (!address) {\n      setError('Please enter a valid contract address.');\n      return;\n    }\n    try {\n      setLogs(prev => [...prev, 'Initializing Web3...']);\n      const web3 = new Web3('http://37.27.107.225:7777'); // Your node address\n\n      setLogs(prev => [...prev, `Querying Transfer events for address: ${address}`]);\n      const contract = new web3.eth.Contract([{\n        anonymous: false,\n        inputs: [{\n          indexed: true,\n          name: 'from',\n          type: 'address'\n        }, {\n          indexed: true,\n          name: 'to',\n          type: 'address'\n        }, {\n          indexed: false,\n          name: 'value',\n          type: 'uint256'\n        }],\n        name: 'Transfer',\n        type: 'event'\n      }], address);\n      const latestBlock = await web3.eth.getBlockNumber();\n      const blocksPerDay = Math.floor(24 * 60 * 60 / 15);\n      //const fromBlock = Math.max(latestBlock - blocksPerDay, 0);\n\n      //setLogs((prev) => [...prev, `Querying from block ${fromBlock} to ${latestBlock}`]);\n\n      const pastEvents = await contract.getPastEvents('Transfer', {\n        fromBlock: '2000',\n        toBlock: 'latest'\n      });\n      const formattedEvents = pastEvents.map(event => ({\n        from: event.returnValues.from,\n        to: event.returnValues.to,\n        value: BigInt(event.returnValues.value).toString(),\n        // Convert BigInt to string\n        transactionHash: event.transactionHash,\n        blockNumber: event.blockNumber,\n        timestamp: new Date().toISOString(),\n        // Add a placeholder timestamp\n        type: event.returnValues.to.toLowerCase() === knownPoolAddress.toLowerCase() ? 'Sell' : event.returnValues.from.toLowerCase() === knownPoolAddress.toLowerCase() ? 'Buy' : 'Other'\n      }));\n      setLogs(prev => [...prev, `Found ${formattedEvents.length} Transfer events.`]);\n      setEvents(prev => [...formattedEvents, ...prev]);\n      const chartLabels = formattedEvents.map(e => e.timestamp);\n      const chartValues = formattedEvents.map(e => parseFloat(e.value));\n      setChartData({\n        labels: chartLabels,\n        datasets: [{\n          label: 'Transaction Values',\n          data: chartValues,\n          borderColor: 'rgba(75, 192, 192, 1)',\n          borderWidth: 2,\n          fill: false\n        }]\n      });\n    } catch (err) {\n      setError(`Error occurred: ${err.message}`);\n      setLogs(prev => [...prev, `Error occurred: ${err.message}`]);\n    }\n  };\n  const paginatedEvents = events.slice((currentPage - 1) * pageSize, currentPage * pageSize);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '20px',\n      fontFamily: 'Arial, sans-serif'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Taraxa Live Chart Debugger\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: address,\n        onChange: e => setAddress(e.target.value),\n        placeholder: \"Enter Contract Address\",\n        style: {\n          width: '300px',\n          marginRight: '10px',\n          padding: '5px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchTransferEvents,\n        style: {\n          padding: '5px 10px'\n        },\n        children: \"Fetch Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Logs:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: logs.map((log, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: log\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Transfer Events:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        border: \"1\",\n        style: {\n          width: '100%',\n          borderCollapse: 'collapse'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"From\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"To\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Value\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Timestamp\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Transaction Hash\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: paginatedEvents.map((event, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            style: {\n              backgroundColor: event.type === 'Sell' ? 'red' : event.type === 'Buy' ? 'green' : 'white',\n              color: event.type === 'Sell' || event.type === 'Buy' ? 'white' : 'black'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: event.from\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: event.to\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: event.value\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: event.timestamp\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: event.transactionHash\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: event.type\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setCurrentPage(prev => Math.max(prev - 1, 1)),\n          disabled: currentPage === 1,\n          children: \"Previous\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            margin: '0 10px'\n          },\n          children: [\"Page \", currentPage]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setCurrentPage(prev => prev * pageSize < events.length ? prev + 1 : prev),\n          disabled: currentPage * pageSize >= events.length,\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Transaction Chart:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this), chartData ? /*#__PURE__*/_jsxDEV(Line, {\n        data: chartData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No chart data available.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"4I8K0volpzVy5X2ZUurRQsa+DJc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Web3","Line","Chart","ChartJS","LineElement","CategoryScale","LinearScale","PointElement","Tooltip","Legend","jsxDEV","_jsxDEV","register","App","_s","address","setAddress","events","setEvents","error","setError","logs","setLogs","currentPage","setCurrentPage","chartData","setChartData","pageSize","knownPoolAddress","interval","setInterval","fetchTransferEvents","clearInterval","prev","web3","contract","eth","Contract","anonymous","inputs","indexed","name","type","latestBlock","getBlockNumber","blocksPerDay","Math","floor","pastEvents","getPastEvents","fromBlock","toBlock","formattedEvents","map","event","from","returnValues","to","value","BigInt","toString","transactionHash","blockNumber","timestamp","Date","toISOString","toLowerCase","length","chartLabels","e","chartValues","parseFloat","labels","datasets","label","data","borderColor","borderWidth","fill","err","message","paginatedEvents","slice","style","padding","fontFamily","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","target","placeholder","width","marginRight","onClick","color","log","index","border","borderCollapse","backgroundColor","max","disabled","margin","_c","$RefreshReg$"],"sources":["C:/Users/manager/Documents/GitHub/taraxa-live-chart/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Web3 from 'web3';\r\nimport { Line } from 'react-chartjs-2';\r\nimport {\r\n  Chart as ChartJS,\r\n  LineElement,\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  Tooltip,\r\n  Legend,\r\n} from 'chart.js';\r\n\r\nChartJS.register(LineElement, CategoryScale, LinearScale, PointElement, Tooltip, Legend);\r\n\r\nconst App = () => {\r\n  const [address, setAddress] = useState('');\r\n  const [events, setEvents] = useState([]);\r\n  const [error, setError] = useState('');\r\n  const [logs, setLogs] = useState([]);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [chartData, setChartData] = useState(null);\r\n  const pageSize = 10;\r\n\r\n  const knownPoolAddress = \"0xE9ba4dB22e58D5887fc67dbf8dB2b9516352315e\"; // Replace with the actual pool address\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      if (address) {\r\n        fetchTransferEvents();\r\n      }\r\n    }, 5000); // Poll every 5 seconds\r\n\r\n    return () => clearInterval(interval);\r\n  }, [address]);\r\n\r\n  const fetchTransferEvents = async () => {\r\n    setError('');\r\n    setLogs([]);\r\n\r\n    if (!address) {\r\n      setError('Please enter a valid contract address.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setLogs((prev) => [...prev, 'Initializing Web3...']);\r\n      const web3 = new Web3('http://37.27.107.225:7777'); // Your node address\r\n\r\n      setLogs((prev) => [...prev, `Querying Transfer events for address: ${address}`]);\r\n      const contract = new web3.eth.Contract(\r\n        [\r\n          {\r\n            anonymous: false,\r\n            inputs: [\r\n              { indexed: true, name: 'from', type: 'address' },\r\n              { indexed: true, name: 'to', type: 'address' },\r\n              { indexed: false, name: 'value', type: 'uint256' },\r\n            ],\r\n            name: 'Transfer',\r\n            type: 'event',\r\n          },\r\n        ],\r\n        address\r\n      );\r\n\r\n      const latestBlock = await web3.eth.getBlockNumber();\r\n      const blocksPerDay = Math.floor((24 * 60 * 60) / 15);\r\n      //const fromBlock = Math.max(latestBlock - blocksPerDay, 0);\r\n\r\n      //setLogs((prev) => [...prev, `Querying from block ${fromBlock} to ${latestBlock}`]);\r\n\r\n      const pastEvents = await contract.getPastEvents('Transfer', {\r\n        fromBlock: '2000',\r\n        toBlock: 'latest',\r\n      });\r\n\r\n      const formattedEvents = pastEvents.map((event) => ({\r\n        from: event.returnValues.from,\r\n        to: event.returnValues.to,\r\n        value: BigInt(event.returnValues.value).toString(), // Convert BigInt to string\r\n        transactionHash: event.transactionHash,\r\n        blockNumber: event.blockNumber,\r\n        timestamp: new Date().toISOString(), // Add a placeholder timestamp\r\n        type: event.returnValues.to.toLowerCase() === knownPoolAddress.toLowerCase()\r\n          ? 'Sell'\r\n          : event.returnValues.from.toLowerCase() === knownPoolAddress.toLowerCase()\r\n          ? 'Buy'\r\n          : 'Other',\r\n      }));\r\n\r\n      setLogs((prev) => [...prev, `Found ${formattedEvents.length} Transfer events.`]);\r\n\r\n      setEvents((prev) => [...formattedEvents, ...prev]);\r\n\r\n      const chartLabels = formattedEvents.map((e) => e.timestamp);\r\n      const chartValues = formattedEvents.map((e) => parseFloat(e.value));\r\n\r\n      setChartData({\r\n        labels: chartLabels,\r\n        datasets: [\r\n          {\r\n            label: 'Transaction Values',\r\n            data: chartValues,\r\n            borderColor: 'rgba(75, 192, 192, 1)',\r\n            borderWidth: 2,\r\n            fill: false,\r\n          },\r\n        ],\r\n      });\r\n    } catch (err) {\r\n      setError(`Error occurred: ${err.message}`);\r\n      setLogs((prev) => [...prev, `Error occurred: ${err.message}`]);\r\n    }\r\n  };\r\n\r\n  const paginatedEvents = events.slice((currentPage - 1) * pageSize, currentPage * pageSize);\r\n\r\n  return (\r\n    <div style={{ padding: '20px', fontFamily: 'Arial, sans-serif' }}>\r\n      <h1>Taraxa Live Chart Debugger</h1>\r\n\r\n      <div>\r\n        <input\r\n          type=\"text\"\r\n          value={address}\r\n          onChange={(e) => setAddress(e.target.value)}\r\n          placeholder=\"Enter Contract Address\"\r\n          style={{ width: '300px', marginRight: '10px', padding: '5px' }}\r\n        />\r\n        <button onClick={fetchTransferEvents} style={{ padding: '5px 10px' }}>\r\n          Fetch Data\r\n        </button>\r\n      </div>\r\n\r\n      {error && <p style={{ color: 'red' }}>{error}</p>}\r\n\r\n      <div>\r\n        <h3>Logs:</h3>\r\n        <ul>\r\n          {logs.map((log, index) => (\r\n            <li key={index}>{log}</li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n\r\n      <div>\r\n        <h3>Transfer Events:</h3>\r\n        <table border=\"1\" style={{ width: '100%', borderCollapse: 'collapse' }}>\r\n          <thead>\r\n            <tr>\r\n              <th>From</th>\r\n              <th>To</th>\r\n              <th>Value</th>\r\n              <th>Timestamp</th>\r\n              <th>Transaction Hash</th>\r\n              <th>Type</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {paginatedEvents.map((event, index) => (\r\n              <tr\r\n                key={index}\r\n                style={{\r\n                  backgroundColor: event.type === 'Sell' ? 'red' : event.type === 'Buy' ? 'green' : 'white',\r\n                  color: event.type === 'Sell' || event.type === 'Buy' ? 'white' : 'black',\r\n                }}\r\n              >\r\n                <td>{event.from}</td>\r\n                <td>{event.to}</td>\r\n                <td>{event.value}</td>\r\n                <td>{event.timestamp}</td>\r\n                <td>{event.transactionHash}</td>\r\n                <td>{event.type}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n        <div>\r\n          <button\r\n            onClick={() => setCurrentPage((prev) => Math.max(prev - 1, 1))}\r\n            disabled={currentPage === 1}\r\n          >\r\n            Previous\r\n          </button>\r\n          <span style={{ margin: '0 10px' }}>Page {currentPage}</span>\r\n          <button\r\n            onClick={() =>\r\n              setCurrentPage((prev) =>\r\n                prev * pageSize < events.length ? prev + 1 : prev\r\n              )\r\n            }\r\n            disabled={currentPage * pageSize >= events.length}\r\n          >\r\n            Next\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <div>\r\n        <h3>Transaction Chart:</h3>\r\n        {chartData ? (\r\n          <Line data={chartData} />\r\n        ) : (\r\n          <p>No chart data available.</p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}