{"ast":null,"code":"var _jsxFileName = \"D:\\\\GitHub\\\\taraxa-live-chart\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Web3 from \"web3\";\nimport { Chart, registerables } from \"chart.js\";\nimport { CandlestickController, CandlestickElement } from \"chartjs-chart-financial\";\nimport \"chartjs-adapter-date-fns\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChart.register(...registerables, CandlestickController, CandlestickElement);\nconst App = () => {\n  _s();\n  const [lpAddress, setLpAddress] = useState(\"\");\n  const [transactions, setTransactions] = useState([]);\n  const [candlestickData, setCandlestickData] = useState([]);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const nodeUrl = \"http://46.4.138.103:7777\";\n  const TARA_USD_PRICE = 0.01; // Fixed for now.\n\n  const abi = [{\n    anonymous: false,\n    inputs: [{\n      indexed: true,\n      internalType: \"address\",\n      name: \"from\",\n      type: \"address\"\n    }, {\n      indexed: true,\n      internalType: \"address\",\n      name: \"to\",\n      type: \"address\"\n    }, {\n      indexed: false,\n      internalType: \"uint256\",\n      name: \"value\",\n      type: \"uint256\"\n    }],\n    name: \"Transfer\",\n    type: \"event\"\n  }, {\n    inputs: [],\n    name: \"getReserves\",\n    outputs: [{\n      internalType: \"uint112\",\n      name: \"_reserve0\",\n      type: \"uint112\"\n    }, {\n      internalType: \"uint112\",\n      name: \"_reserve1\",\n      type: \"uint112\"\n    }, {\n      internalType: \"uint32\",\n      name: \"_blockTimestampLast\",\n      type: \"uint32\"\n    }],\n    stateMutability: \"view\",\n    type: \"function\"\n  }];\n  const fetchPriceAndTransactions = async () => {\n    if (!lpAddress) {\n      setErrorMessage(\"Please enter a valid LP address.\");\n      return;\n    }\n    setErrorMessage(\"\");\n    setTransactions([]);\n    try {\n      const web3 = new Web3(nodeUrl);\n      const contract = new web3.eth.Contract(abi, lpAddress);\n\n      // Fetch reserves\n      const reserves = await contract.methods.getReserves().call();\n      const reserveA = parseFloat(web3.utils.fromWei(reserves._reserve0, \"ether\"));\n      const reserveB = parseFloat(web3.utils.fromWei(reserves._reserve1, \"ether\"));\n\n      // Calculate TARA price in USD\n      const taraPrice = reserveB / reserveA;\n      console.log(`Calculated TARA price: $${taraPrice.toFixed(4)} USD`);\n\n      // Fetch Transfer events\n      const events = await contract.getPastEvents(\"Transfer\", {\n        fromBlock: \"earliest\",\n        toBlock: \"latest\"\n      });\n      const processedTransactions = events.filter(event => event.returnValues.from.toLowerCase() === lpAddress.toLowerCase() || event.returnValues.to.toLowerCase() === lpAddress.toLowerCase()).map(event => {\n        const {\n          from,\n          to,\n          value\n        } = event.returnValues;\n        const direction = to.toLowerCase() === lpAddress.toLowerCase() ? \"Buy\" : \"Sell\";\n        return {\n          from,\n          to,\n          value: parseFloat(web3.utils.fromWei(value, \"ether\")) * taraPrice,\n          // Value in USD\n          direction,\n          transactionHash: event.transactionHash,\n          timestamp: event.blockNumber // Replace with actual timestamp if available\n        };\n      });\n      setTransactions(processedTransactions);\n      generateCandlestickData(processedTransactions);\n    } catch (error) {\n      console.error(\"Error fetching transactions or reserves:\", error);\n      setErrorMessage(\"Failed to fetch data. Check the LP address or ABI.\");\n    }\n  };\n  const generateCandlestickData = transactions => {\n    const groupedByTime = {};\n    transactions.forEach(tx => {\n      const timestamp = Math.floor(Date.now() / 60000) * 60000; // Round to the nearest minute\n      const value = tx.value;\n      if (!groupedByTime[timestamp]) {\n        groupedByTime[timestamp] = {\n          open: value,\n          high: value,\n          low: value,\n          close: value\n        };\n      } else {\n        groupedByTime[timestamp].high = Math.max(groupedByTime[timestamp].high, value);\n        groupedByTime[timestamp].low = Math.min(groupedByTime[timestamp].low, value);\n        groupedByTime[timestamp].close = value;\n      }\n    });\n    const candlestick = Object.entries(groupedByTime).map(([timestamp, ohlc]) => ({\n      x: parseInt(timestamp, 10),\n      o: ohlc.open,\n      h: ohlc.high,\n      l: ohlc.low,\n      c: ohlc.close\n    }));\n    setCandlestickData(candlestick);\n  };\n  const renderChart = () => {\n    const ctx = document.getElementById(\"candlestickChart\").getContext(\"2d\");\n    new Chart(ctx, {\n      type: \"candlestick\",\n      data: {\n        datasets: [{\n          label: \"Liquidity Pool (TARA/USD)\",\n          data: candlestickData,\n          borderColor: \"#00ff00\",\n          borderWidth: 1\n        }]\n      },\n      options: {\n        responsive: true,\n        scales: {\n          x: {\n            type: \"time\",\n            time: {\n              unit: \"minute\"\n            },\n            title: {\n              display: true,\n              text: \"Time\"\n            }\n          },\n          y: {\n            beginAtZero: true,\n            title: {\n              display: true,\n              text: \"Price (USD)\"\n            }\n          }\n        }\n      }\n    });\n  };\n  useEffect(() => {\n    if (candlestickData.length > 0) {\n      renderChart();\n    }\n  }, [candlestickData]);\n  const handleInputChange = event => {\n    setLpAddress(event.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"20px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Liquidity Pool Transactions and Price Chart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter LP Address\",\n        value: lpAddress,\n        onChange: handleInputChange,\n        style: {\n          width: \"400px\",\n          marginRight: \"10px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchPriceAndTransactions,\n        children: \"Fetch Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      id: \"candlestickChart\",\n      width: \"800\",\n      height: \"400\",\n      style: {\n        marginTop: \"20px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }, this), transactions.length > 0 ? /*#__PURE__*/_jsxDEV(\"table\", {\n      border: \"1\",\n      cellPadding: \"10\",\n      style: {\n        marginTop: \"20px\",\n        width: \"100%\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"From\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"To\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Value (USD)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Direction\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Transaction Hash\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: transactions.map((tx, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          style: {\n            backgroundColor: tx.direction === \"Buy\" ? \"#d4fcdc\" : \"#fcd4d4\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: tx.from\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: tx.to\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: tx.value.toFixed(2)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: tx.direction\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: `https://tara.to/tx/${tx.transactionHash}`,\n              target: \"_blank\",\n              rel: \"noopener noreferrer\",\n              children: tx.transactionHash\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No transactions found involving this LP address.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 190,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"myX7gTr2rkBIPOcMxHnFHa2mJrY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Web3","Chart","registerables","CandlestickController","CandlestickElement","jsxDEV","_jsxDEV","register","App","_s","lpAddress","setLpAddress","transactions","setTransactions","candlestickData","setCandlestickData","errorMessage","setErrorMessage","nodeUrl","TARA_USD_PRICE","abi","anonymous","inputs","indexed","internalType","name","type","outputs","stateMutability","fetchPriceAndTransactions","web3","contract","eth","Contract","reserves","methods","getReserves","call","reserveA","parseFloat","utils","fromWei","_reserve0","reserveB","_reserve1","taraPrice","console","log","toFixed","events","getPastEvents","fromBlock","toBlock","processedTransactions","filter","event","returnValues","from","toLowerCase","to","map","value","direction","transactionHash","timestamp","blockNumber","generateCandlestickData","error","groupedByTime","forEach","tx","Math","floor","Date","now","open","high","low","close","max","min","candlestick","Object","entries","ohlc","x","parseInt","o","h","l","c","renderChart","ctx","document","getElementById","getContext","data","datasets","label","borderColor","borderWidth","options","responsive","scales","time","unit","title","display","text","y","beginAtZero","length","handleInputChange","target","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","onChange","width","marginRight","onClick","color","id","height","marginTop","border","cellPadding","index","backgroundColor","href","rel","_c","$RefreshReg$"],"sources":["D:/GitHub/taraxa-live-chart/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Web3 from \"web3\";\r\nimport { Chart, registerables } from \"chart.js\";\r\nimport {\r\n  CandlestickController,\r\n  CandlestickElement,\r\n} from \"chartjs-chart-financial\";\r\nimport \"chartjs-adapter-date-fns\";\r\n\r\nChart.register(...registerables, CandlestickController, CandlestickElement);\r\n\r\nconst App = () => {\r\n  const [lpAddress, setLpAddress] = useState(\"\");\r\n  const [transactions, setTransactions] = useState([]);\r\n  const [candlestickData, setCandlestickData] = useState([]);\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n\r\n  const nodeUrl = \"http://46.4.138.103:7777\";\r\n  const TARA_USD_PRICE = 0.01; // Fixed for now.\r\n\r\n  const abi = [\r\n    {\r\n      anonymous: false,\r\n      inputs: [\r\n        { indexed: true, internalType: \"address\", name: \"from\", type: \"address\" },\r\n        { indexed: true, internalType: \"address\", name: \"to\", type: \"address\" },\r\n        { indexed: false, internalType: \"uint256\", name: \"value\", type: \"uint256\" },\r\n      ],\r\n      name: \"Transfer\",\r\n      type: \"event\",\r\n    },\r\n    {\r\n      inputs: [],\r\n      name: \"getReserves\",\r\n      outputs: [\r\n        { internalType: \"uint112\", name: \"_reserve0\", type: \"uint112\" },\r\n        { internalType: \"uint112\", name: \"_reserve1\", type: \"uint112\" },\r\n        { internalType: \"uint32\", name: \"_blockTimestampLast\", type: \"uint32\" },\r\n      ],\r\n      stateMutability: \"view\",\r\n      type: \"function\",\r\n    },\r\n  ];\r\n\r\n  const fetchPriceAndTransactions = async () => {\r\n    if (!lpAddress) {\r\n      setErrorMessage(\"Please enter a valid LP address.\");\r\n      return;\r\n    }\r\n\r\n    setErrorMessage(\"\");\r\n    setTransactions([]);\r\n\r\n    try {\r\n      const web3 = new Web3(nodeUrl);\r\n      const contract = new web3.eth.Contract(abi, lpAddress);\r\n\r\n      // Fetch reserves\r\n      const reserves = await contract.methods.getReserves().call();\r\n      const reserveA = parseFloat(web3.utils.fromWei(reserves._reserve0, \"ether\"));\r\n      const reserveB = parseFloat(web3.utils.fromWei(reserves._reserve1, \"ether\"));\r\n\r\n      // Calculate TARA price in USD\r\n      const taraPrice = reserveB / reserveA;\r\n      console.log(`Calculated TARA price: $${taraPrice.toFixed(4)} USD`);\r\n\r\n      // Fetch Transfer events\r\n      const events = await contract.getPastEvents(\"Transfer\", {\r\n        fromBlock: \"earliest\",\r\n        toBlock: \"latest\",\r\n      });\r\n\r\n      const processedTransactions = events\r\n        .filter(\r\n          (event) =>\r\n            event.returnValues.from.toLowerCase() === lpAddress.toLowerCase() ||\r\n            event.returnValues.to.toLowerCase() === lpAddress.toLowerCase()\r\n        )\r\n        .map((event) => {\r\n          const { from, to, value } = event.returnValues;\r\n          const direction =\r\n            to.toLowerCase() === lpAddress.toLowerCase() ? \"Buy\" : \"Sell\";\r\n          return {\r\n            from,\r\n            to,\r\n            value: parseFloat(web3.utils.fromWei(value, \"ether\")) * taraPrice, // Value in USD\r\n            direction,\r\n            transactionHash: event.transactionHash,\r\n            timestamp: event.blockNumber, // Replace with actual timestamp if available\r\n          };\r\n        });\r\n\r\n      setTransactions(processedTransactions);\r\n      generateCandlestickData(processedTransactions);\r\n    } catch (error) {\r\n      console.error(\"Error fetching transactions or reserves:\", error);\r\n      setErrorMessage(\"Failed to fetch data. Check the LP address or ABI.\");\r\n    }\r\n  };\r\n\r\n  const generateCandlestickData = (transactions) => {\r\n    const groupedByTime = {};\r\n\r\n    transactions.forEach((tx) => {\r\n      const timestamp = Math.floor(Date.now() / 60000) * 60000; // Round to the nearest minute\r\n      const value = tx.value;\r\n\r\n      if (!groupedByTime[timestamp]) {\r\n        groupedByTime[timestamp] = {\r\n          open: value,\r\n          high: value,\r\n          low: value,\r\n          close: value,\r\n        };\r\n      } else {\r\n        groupedByTime[timestamp].high = Math.max(\r\n          groupedByTime[timestamp].high,\r\n          value\r\n        );\r\n        groupedByTime[timestamp].low = Math.min(\r\n          groupedByTime[timestamp].low,\r\n          value\r\n        );\r\n        groupedByTime[timestamp].close = value;\r\n      }\r\n    });\r\n\r\n    const candlestick = Object.entries(groupedByTime).map(([timestamp, ohlc]) => ({\r\n      x: parseInt(timestamp, 10),\r\n      o: ohlc.open,\r\n      h: ohlc.high,\r\n      l: ohlc.low,\r\n      c: ohlc.close,\r\n    }));\r\n\r\n    setCandlestickData(candlestick);\r\n  };\r\n\r\n  const renderChart = () => {\r\n    const ctx = document.getElementById(\"candlestickChart\").getContext(\"2d\");\r\n\r\n    new Chart(ctx, {\r\n      type: \"candlestick\",\r\n      data: {\r\n        datasets: [\r\n          {\r\n            label: \"Liquidity Pool (TARA/USD)\",\r\n            data: candlestickData,\r\n            borderColor: \"#00ff00\",\r\n            borderWidth: 1,\r\n          },\r\n        ],\r\n      },\r\n      options: {\r\n        responsive: true,\r\n        scales: {\r\n          x: {\r\n            type: \"time\",\r\n            time: {\r\n              unit: \"minute\",\r\n            },\r\n            title: {\r\n              display: true,\r\n              text: \"Time\",\r\n            },\r\n          },\r\n          y: {\r\n            beginAtZero: true,\r\n            title: {\r\n              display: true,\r\n              text: \"Price (USD)\",\r\n            },\r\n          },\r\n        },\r\n      },\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (candlestickData.length > 0) {\r\n      renderChart();\r\n    }\r\n  }, [candlestickData]);\r\n\r\n  const handleInputChange = (event) => {\r\n    setLpAddress(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: \"20px\" }}>\r\n      <h1>Liquidity Pool Transactions and Price Chart</h1>\r\n      <div>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Enter LP Address\"\r\n          value={lpAddress}\r\n          onChange={handleInputChange}\r\n          style={{ width: \"400px\", marginRight: \"10px\" }}\r\n        />\r\n        <button onClick={fetchPriceAndTransactions}>Fetch Data</button>\r\n      </div>\r\n      {errorMessage && <p style={{ color: \"red\" }}>{errorMessage}</p>}\r\n      <canvas id=\"candlestickChart\" width=\"800\" height=\"400\" style={{ marginTop: \"20px\" }} />\r\n      {transactions.length > 0 ? (\r\n        <table border=\"1\" cellPadding=\"10\" style={{ marginTop: \"20px\", width: \"100%\" }}>\r\n          <thead>\r\n            <tr>\r\n              <th>From</th>\r\n              <th>To</th>\r\n              <th>Value (USD)</th>\r\n              <th>Direction</th>\r\n              <th>Transaction Hash</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {transactions.map((tx, index) => (\r\n              <tr\r\n                key={index}\r\n                style={{\r\n                  backgroundColor: tx.direction === \"Buy\" ? \"#d4fcdc\" : \"#fcd4d4\",\r\n                }}\r\n              >\r\n                <td>{tx.from}</td>\r\n                <td>{tx.to}</td>\r\n                <td>{tx.value.toFixed(2)}</td>\r\n                <td>{tx.direction}</td>\r\n                <td>\r\n                  <a\r\n                    href={`https://tara.to/tx/${tx.transactionHash}`}\r\n                    target=\"_blank\"\r\n                    rel=\"noopener noreferrer\"\r\n                  >\r\n                    {tx.transactionHash}\r\n                  </a>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      ) : (\r\n        <p>No transactions found involving this LP address.</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}