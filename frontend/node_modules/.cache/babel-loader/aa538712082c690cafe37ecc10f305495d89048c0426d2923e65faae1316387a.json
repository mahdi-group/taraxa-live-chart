{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\manager\\\\Documents\\\\GitHub\\\\taraxa-live-chart\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Web3 from 'web3';\nimport { Line } from 'react-chartjs-2';\nimport { Chart as ChartJS, LineElement, CategoryScale, LinearScale, PointElement, Tooltip, Legend } from 'chart.js';\n\n// Register Chart.js components\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(LineElement, CategoryScale, LinearScale, PointElement, Tooltip, Legend);\nconst App = () => {\n  _s();\n  const [address, setAddress] = useState('');\n  const [events, setEvents] = useState([]);\n  const [error, setError] = useState('');\n  const [logs, setLogs] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [chartData, setChartData] = useState(null);\n  const pageSize = 10;\n  useEffect(() => {\n    const interval = setInterval(() => {\n      if (address) {\n        fetchTransferEvents();\n      }\n    }, 5000);\n    return () => clearInterval(interval);\n  }, [address]);\n  const fetchTransferEvents = async () => {\n    setError('');\n    setLogs([]);\n    if (!address) {\n      setError('Please enter a valid contract address.');\n      return;\n    }\n    try {\n      setLogs(prev => [...prev, 'Initializing Web3...']);\n      const web3 = new Web3('http://37.27.107.225:7777'); // Your node address\n\n      setLogs(prev => [...prev, `Querying Transfer events for address: ${address}`]);\n      const contract = new web3.eth.Contract([{\n        anonymous: false,\n        inputs: [{\n          indexed: true,\n          name: 'from',\n          type: 'address'\n        }, {\n          indexed: true,\n          name: 'to',\n          type: 'address'\n        }, {\n          indexed: false,\n          name: 'value',\n          type: 'uint256'\n        }],\n        name: 'Transfer',\n        type: 'event'\n      }], address);\n      const pastEvents = await contract.getPastEvents('Transfer', {\n        fromBlock: 'latest',\n        toBlock: 'latest'\n      });\n      const formattedEvents = pastEvents.map(event => ({\n        from: event.returnValues.from,\n        to: event.returnValues.to,\n        value: parseFloat(event.returnValues.value.toString()),\n        // Ensure it's a number\n        transactionHash: event.transactionHash,\n        blockNumber: event.blockNumber,\n        timestamp: new Date().toISOString()\n      }));\n      setLogs(prev => [...prev, `Found ${formattedEvents.length} Transfer events.`]);\n      setEvents(prev => [...formattedEvents, ...prev]);\n\n      // Update chart data\n      const chartLabels = formattedEvents.map(e => e.timestamp);\n      const chartValues = formattedEvents.map(e => e.value);\n      setChartData({\n        labels: chartLabels,\n        datasets: [{\n          label: 'Transaction Values',\n          data: chartValues,\n          borderColor: 'rgba(75, 192, 192, 1)',\n          borderWidth: 2,\n          fill: false\n        }]\n      });\n    } catch (err) {\n      setError(`Error occurred: ${err.message}`);\n      setLogs(prev => [...prev, `Error occurred: ${err.message}`]);\n    }\n  };\n  const paginatedEvents = events.slice((currentPage - 1) * pageSize, currentPage * pageSize);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '20px',\n      fontFamily: 'Arial, sans-serif'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Taraxa Live Chart Debugger\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: address,\n        onChange: e => setAddress(e.target.value),\n        placeholder: \"Enter Contract Address\",\n        style: {\n          width: '300px',\n          marginRight: '10px',\n          padding: '5px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchTransferEvents,\n        style: {\n          padding: '5px 10px'\n        },\n        children: \"Fetch Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Logs:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: logs.map((log, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: log\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Transfer Events:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        border: \"1\",\n        style: {\n          width: '100%',\n          borderCollapse: 'collapse'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"From\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"To\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Value\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Timestamp\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Transaction Hash\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: paginatedEvents.map((event, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: event.from\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: event.to\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: event.value\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: event.timestamp\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: event.transactionHash\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setCurrentPage(prev => Math.max(prev - 1, 1)),\n          disabled: currentPage === 1,\n          children: \"Previous\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            margin: '0 10px'\n          },\n          children: [\"Page \", currentPage]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setCurrentPage(prev => prev * pageSize < events.length ? prev + 1 : prev),\n          disabled: currentPage * pageSize >= events.length,\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Transaction Chart:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this), chartData ? /*#__PURE__*/_jsxDEV(Line, {\n        data: chartData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No chart data available.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"4I8K0volpzVy5X2ZUurRQsa+DJc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Web3","Line","Chart","ChartJS","LineElement","CategoryScale","LinearScale","PointElement","Tooltip","Legend","jsxDEV","_jsxDEV","register","App","_s","address","setAddress","events","setEvents","error","setError","logs","setLogs","currentPage","setCurrentPage","chartData","setChartData","pageSize","interval","setInterval","fetchTransferEvents","clearInterval","prev","web3","contract","eth","Contract","anonymous","inputs","indexed","name","type","pastEvents","getPastEvents","fromBlock","toBlock","formattedEvents","map","event","from","returnValues","to","value","parseFloat","toString","transactionHash","blockNumber","timestamp","Date","toISOString","length","chartLabels","e","chartValues","labels","datasets","label","data","borderColor","borderWidth","fill","err","message","paginatedEvents","slice","style","padding","fontFamily","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","target","placeholder","width","marginRight","onClick","color","log","index","border","borderCollapse","Math","max","disabled","margin","_c","$RefreshReg$"],"sources":["C:/Users/manager/Documents/GitHub/taraxa-live-chart/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Web3 from 'web3';\r\nimport { Line } from 'react-chartjs-2';\r\nimport {\r\n  Chart as ChartJS,\r\n  LineElement,\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  Tooltip,\r\n  Legend,\r\n} from 'chart.js';\r\n\r\n// Register Chart.js components\r\nChartJS.register(LineElement, CategoryScale, LinearScale, PointElement, Tooltip, Legend);\r\n\r\nconst App = () => {\r\n  const [address, setAddress] = useState('');\r\n  const [events, setEvents] = useState([]);\r\n  const [error, setError] = useState('');\r\n  const [logs, setLogs] = useState([]);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [chartData, setChartData] = useState(null);\r\n  const pageSize = 10;\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      if (address) {\r\n        fetchTransferEvents();\r\n      }\r\n    }, 5000);\r\n\r\n    return () => clearInterval(interval);\r\n  }, [address]);\r\n\r\n  const fetchTransferEvents = async () => {\r\n    setError('');\r\n    setLogs([]);\r\n\r\n    if (!address) {\r\n      setError('Please enter a valid contract address.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setLogs((prev) => [...prev, 'Initializing Web3...']);\r\n      const web3 = new Web3('http://37.27.107.225:7777'); // Your node address\r\n\r\n      setLogs((prev) => [...prev, `Querying Transfer events for address: ${address}`]);\r\n      const contract = new web3.eth.Contract(\r\n        [\r\n          {\r\n            anonymous: false,\r\n            inputs: [\r\n              { indexed: true, name: 'from', type: 'address' },\r\n              { indexed: true, name: 'to', type: 'address' },\r\n              { indexed: false, name: 'value', type: 'uint256' },\r\n            ],\r\n            name: 'Transfer',\r\n            type: 'event',\r\n          },\r\n        ],\r\n        address\r\n      );\r\n\r\n      const pastEvents = await contract.getPastEvents('Transfer', {\r\n        fromBlock: 'latest',\r\n        toBlock: 'latest',\r\n      });\r\n\r\n      const formattedEvents = pastEvents.map((event) => ({\r\n        from: event.returnValues.from,\r\n        to: event.returnValues.to,\r\n        value: parseFloat(event.returnValues.value.toString()), // Ensure it's a number\r\n        transactionHash: event.transactionHash,\r\n        blockNumber: event.blockNumber,\r\n        timestamp: new Date().toISOString(),\r\n      }));\r\n\r\n      setLogs((prev) => [...prev, `Found ${formattedEvents.length} Transfer events.`]);\r\n\r\n      setEvents((prev) => [...formattedEvents, ...prev]);\r\n\r\n      // Update chart data\r\n      const chartLabels = formattedEvents.map((e) => e.timestamp);\r\n      const chartValues = formattedEvents.map((e) => e.value);\r\n\r\n      setChartData({\r\n        labels: chartLabels,\r\n        datasets: [\r\n          {\r\n            label: 'Transaction Values',\r\n            data: chartValues,\r\n            borderColor: 'rgba(75, 192, 192, 1)',\r\n            borderWidth: 2,\r\n            fill: false,\r\n          },\r\n        ],\r\n      });\r\n    } catch (err) {\r\n      setError(`Error occurred: ${err.message}`);\r\n      setLogs((prev) => [...prev, `Error occurred: ${err.message}`]);\r\n    }\r\n  };\r\n\r\n  const paginatedEvents = events.slice((currentPage - 1) * pageSize, currentPage * pageSize);\r\n\r\n  return (\r\n    <div style={{ padding: '20px', fontFamily: 'Arial, sans-serif' }}>\r\n      <h1>Taraxa Live Chart Debugger</h1>\r\n\r\n      <div>\r\n        <input\r\n          type=\"text\"\r\n          value={address}\r\n          onChange={(e) => setAddress(e.target.value)}\r\n          placeholder=\"Enter Contract Address\"\r\n          style={{ width: '300px', marginRight: '10px', padding: '5px' }}\r\n        />\r\n        <button onClick={fetchTransferEvents} style={{ padding: '5px 10px' }}>\r\n          Fetch Data\r\n        </button>\r\n      </div>\r\n\r\n      {error && <p style={{ color: 'red' }}>{error}</p>}\r\n\r\n      <div>\r\n        <h3>Logs:</h3>\r\n        <ul>\r\n          {logs.map((log, index) => (\r\n            <li key={index}>{log}</li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n\r\n      <div>\r\n        <h3>Transfer Events:</h3>\r\n        <table border=\"1\" style={{ width: '100%', borderCollapse: 'collapse' }}>\r\n          <thead>\r\n            <tr>\r\n              <th>From</th>\r\n              <th>To</th>\r\n              <th>Value</th>\r\n              <th>Timestamp</th>\r\n              <th>Transaction Hash</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {paginatedEvents.map((event, index) => (\r\n              <tr key={index}>\r\n                <td>{event.from}</td>\r\n                <td>{event.to}</td>\r\n                <td>{event.value}</td>\r\n                <td>{event.timestamp}</td>\r\n                <td>{event.transactionHash}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n        <div>\r\n          <button\r\n            onClick={() => setCurrentPage((prev) => Math.max(prev - 1, 1))}\r\n            disabled={currentPage === 1}\r\n          >\r\n            Previous\r\n          </button>\r\n          <span style={{ margin: '0 10px' }}>Page {currentPage}</span>\r\n          <button\r\n            onClick={() =>\r\n              setCurrentPage((prev) =>\r\n                prev * pageSize < events.length ? prev + 1 : prev\r\n              )\r\n            }\r\n            disabled={currentPage * pageSize >= events.length}\r\n          >\r\n            Next\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <div>\r\n        <h3>Transaction Chart:</h3>\r\n        {chartData ? (\r\n          <Line data={chartData} />\r\n        ) : (\r\n          <p>No chart data available.</p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,IAAI,MAAM,MAAM;AACvB,SAASC,IAAI,QAAQ,iBAAiB;AACtC,SACEC,KAAK,IAAIC,OAAO,EAChBC,WAAW,EACXC,aAAa,EACbC,WAAW,EACXC,YAAY,EACZC,OAAO,EACPC,MAAM,QACD,UAAU;;AAEjB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACAR,OAAO,CAACS,QAAQ,CAACR,WAAW,EAAEC,aAAa,EAAEC,WAAW,EAAEC,YAAY,EAAEC,OAAO,EAAEC,MAAM,CAAC;AAExF,MAAMI,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACmB,MAAM,EAAEC,SAAS,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACqB,KAAK,EAAEC,QAAQ,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACuB,IAAI,EAAEC,OAAO,CAAC,GAAGxB,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACyB,WAAW,EAAEC,cAAc,CAAC,GAAG1B,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAM,CAAC2B,SAAS,EAAEC,YAAY,CAAC,GAAG5B,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM6B,QAAQ,GAAG,EAAE;EAEnB5B,SAAS,CAAC,MAAM;IACd,MAAM6B,QAAQ,GAAGC,WAAW,CAAC,MAAM;MACjC,IAAId,OAAO,EAAE;QACXe,mBAAmB,CAAC,CAAC;MACvB;IACF,CAAC,EAAE,IAAI,CAAC;IAER,OAAO,MAAMC,aAAa,CAACH,QAAQ,CAAC;EACtC,CAAC,EAAE,CAACb,OAAO,CAAC,CAAC;EAEb,MAAMe,mBAAmB,GAAG,MAAAA,CAAA,KAAY;IACtCV,QAAQ,CAAC,EAAE,CAAC;IACZE,OAAO,CAAC,EAAE,CAAC;IAEX,IAAI,CAACP,OAAO,EAAE;MACZK,QAAQ,CAAC,wCAAwC,CAAC;MAClD;IACF;IAEA,IAAI;MACFE,OAAO,CAAEU,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAE,sBAAsB,CAAC,CAAC;MACpD,MAAMC,IAAI,GAAG,IAAIjC,IAAI,CAAC,2BAA2B,CAAC,CAAC,CAAC;;MAEpDsB,OAAO,CAAEU,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAE,yCAAyCjB,OAAO,EAAE,CAAC,CAAC;MAChF,MAAMmB,QAAQ,GAAG,IAAID,IAAI,CAACE,GAAG,CAACC,QAAQ,CACpC,CACE;QACEC,SAAS,EAAE,KAAK;QAChBC,MAAM,EAAE,CACN;UAAEC,OAAO,EAAE,IAAI;UAAEC,IAAI,EAAE,MAAM;UAAEC,IAAI,EAAE;QAAU,CAAC,EAChD;UAAEF,OAAO,EAAE,IAAI;UAAEC,IAAI,EAAE,IAAI;UAAEC,IAAI,EAAE;QAAU,CAAC,EAC9C;UAAEF,OAAO,EAAE,KAAK;UAAEC,IAAI,EAAE,OAAO;UAAEC,IAAI,EAAE;QAAU,CAAC,CACnD;QACDD,IAAI,EAAE,UAAU;QAChBC,IAAI,EAAE;MACR,CAAC,CACF,EACD1B,OACF,CAAC;MAED,MAAM2B,UAAU,GAAG,MAAMR,QAAQ,CAACS,aAAa,CAAC,UAAU,EAAE;QAC1DC,SAAS,EAAE,QAAQ;QACnBC,OAAO,EAAE;MACX,CAAC,CAAC;MAEF,MAAMC,eAAe,GAAGJ,UAAU,CAACK,GAAG,CAAEC,KAAK,KAAM;QACjDC,IAAI,EAAED,KAAK,CAACE,YAAY,CAACD,IAAI;QAC7BE,EAAE,EAAEH,KAAK,CAACE,YAAY,CAACC,EAAE;QACzBC,KAAK,EAAEC,UAAU,CAACL,KAAK,CAACE,YAAY,CAACE,KAAK,CAACE,QAAQ,CAAC,CAAC,CAAC;QAAE;QACxDC,eAAe,EAAEP,KAAK,CAACO,eAAe;QACtCC,WAAW,EAAER,KAAK,CAACQ,WAAW;QAC9BC,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC;MACpC,CAAC,CAAC,CAAC;MAEHrC,OAAO,CAAEU,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAE,SAASc,eAAe,CAACc,MAAM,mBAAmB,CAAC,CAAC;MAEhF1C,SAAS,CAAEc,IAAI,IAAK,CAAC,GAAGc,eAAe,EAAE,GAAGd,IAAI,CAAC,CAAC;;MAElD;MACA,MAAM6B,WAAW,GAAGf,eAAe,CAACC,GAAG,CAAEe,CAAC,IAAKA,CAAC,CAACL,SAAS,CAAC;MAC3D,MAAMM,WAAW,GAAGjB,eAAe,CAACC,GAAG,CAAEe,CAAC,IAAKA,CAAC,CAACV,KAAK,CAAC;MAEvD1B,YAAY,CAAC;QACXsC,MAAM,EAAEH,WAAW;QACnBI,QAAQ,EAAE,CACR;UACEC,KAAK,EAAE,oBAAoB;UAC3BC,IAAI,EAAEJ,WAAW;UACjBK,WAAW,EAAE,uBAAuB;UACpCC,WAAW,EAAE,CAAC;UACdC,IAAI,EAAE;QACR,CAAC;MAEL,CAAC,CAAC;IACJ,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZnD,QAAQ,CAAC,mBAAmBmD,GAAG,CAACC,OAAO,EAAE,CAAC;MAC1ClD,OAAO,CAAEU,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAE,mBAAmBuC,GAAG,CAACC,OAAO,EAAE,CAAC,CAAC;IAChE;EACF,CAAC;EAED,MAAMC,eAAe,GAAGxD,MAAM,CAACyD,KAAK,CAAC,CAACnD,WAAW,GAAG,CAAC,IAAII,QAAQ,EAAEJ,WAAW,GAAGI,QAAQ,CAAC;EAE1F,oBACEhB,OAAA;IAAKgE,KAAK,EAAE;MAAEC,OAAO,EAAE,MAAM;MAAEC,UAAU,EAAE;IAAoB,CAAE;IAAAC,QAAA,gBAC/DnE,OAAA;MAAAmE,QAAA,EAAI;IAA0B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAEnCvE,OAAA;MAAAmE,QAAA,gBACEnE,OAAA;QACE8B,IAAI,EAAC,MAAM;QACXW,KAAK,EAAErC,OAAQ;QACfoE,QAAQ,EAAGrB,CAAC,IAAK9C,UAAU,CAAC8C,CAAC,CAACsB,MAAM,CAAChC,KAAK,CAAE;QAC5CiC,WAAW,EAAC,wBAAwB;QACpCV,KAAK,EAAE;UAAEW,KAAK,EAAE,OAAO;UAAEC,WAAW,EAAE,MAAM;UAAEX,OAAO,EAAE;QAAM;MAAE;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChE,CAAC,eACFvE,OAAA;QAAQ6E,OAAO,EAAE1D,mBAAoB;QAAC6C,KAAK,EAAE;UAAEC,OAAO,EAAE;QAAW,CAAE;QAAAE,QAAA,EAAC;MAEtE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,EAEL/D,KAAK,iBAAIR,OAAA;MAAGgE,KAAK,EAAE;QAAEc,KAAK,EAAE;MAAM,CAAE;MAAAX,QAAA,EAAE3D;IAAK;MAAA4D,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAEjDvE,OAAA;MAAAmE,QAAA,gBACEnE,OAAA;QAAAmE,QAAA,EAAI;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACdvE,OAAA;QAAAmE,QAAA,EACGzD,IAAI,CAAC0B,GAAG,CAAC,CAAC2C,GAAG,EAAEC,KAAK,kBACnBhF,OAAA;UAAAmE,QAAA,EAAiBY;QAAG,GAAXC,KAAK;UAAAZ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAW,CAC1B;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC,eAENvE,OAAA;MAAAmE,QAAA,gBACEnE,OAAA;QAAAmE,QAAA,EAAI;MAAgB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACzBvE,OAAA;QAAOiF,MAAM,EAAC,GAAG;QAACjB,KAAK,EAAE;UAAEW,KAAK,EAAE,MAAM;UAAEO,cAAc,EAAE;QAAW,CAAE;QAAAf,QAAA,gBACrEnE,OAAA;UAAAmE,QAAA,eACEnE,OAAA;YAAAmE,QAAA,gBACEnE,OAAA;cAAAmE,QAAA,EAAI;YAAI;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACbvE,OAAA;cAAAmE,QAAA,EAAI;YAAE;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACXvE,OAAA;cAAAmE,QAAA,EAAI;YAAK;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACdvE,OAAA;cAAAmE,QAAA,EAAI;YAAS;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAClBvE,OAAA;cAAAmE,QAAA,EAAI;YAAgB;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACvB;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC,eACRvE,OAAA;UAAAmE,QAAA,EACGL,eAAe,CAAC1B,GAAG,CAAC,CAACC,KAAK,EAAE2C,KAAK,kBAChChF,OAAA;YAAAmE,QAAA,gBACEnE,OAAA;cAAAmE,QAAA,EAAK9B,KAAK,CAACC;YAAI;cAAA8B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACrBvE,OAAA;cAAAmE,QAAA,EAAK9B,KAAK,CAACG;YAAE;cAAA4B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACnBvE,OAAA;cAAAmE,QAAA,EAAK9B,KAAK,CAACI;YAAK;cAAA2B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACtBvE,OAAA;cAAAmE,QAAA,EAAK9B,KAAK,CAACS;YAAS;cAAAsB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eAC1BvE,OAAA;cAAAmE,QAAA,EAAK9B,KAAK,CAACO;YAAe;cAAAwB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC;UAAA,GALzBS,KAAK;YAAAZ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAMV,CACL;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eACRvE,OAAA;QAAAmE,QAAA,gBACEnE,OAAA;UACE6E,OAAO,EAAEA,CAAA,KAAMhE,cAAc,CAAEQ,IAAI,IAAK8D,IAAI,CAACC,GAAG,CAAC/D,IAAI,GAAG,CAAC,EAAE,CAAC,CAAC,CAAE;UAC/DgE,QAAQ,EAAEzE,WAAW,KAAK,CAAE;UAAAuD,QAAA,EAC7B;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACTvE,OAAA;UAAMgE,KAAK,EAAE;YAAEsB,MAAM,EAAE;UAAS,CAAE;UAAAnB,QAAA,GAAC,OAAK,EAACvD,WAAW;QAAA;UAAAwD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAC5DvE,OAAA;UACE6E,OAAO,EAAEA,CAAA,KACPhE,cAAc,CAAEQ,IAAI,IAClBA,IAAI,GAAGL,QAAQ,GAAGV,MAAM,CAAC2C,MAAM,GAAG5B,IAAI,GAAG,CAAC,GAAGA,IAC/C,CACD;UACDgE,QAAQ,EAAEzE,WAAW,GAAGI,QAAQ,IAAIV,MAAM,CAAC2C,MAAO;UAAAkB,QAAA,EACnD;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAENvE,OAAA;MAAAmE,QAAA,gBACEnE,OAAA;QAAAmE,QAAA,EAAI;MAAkB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EAC1BzD,SAAS,gBACRd,OAAA,CAACV,IAAI;QAACkE,IAAI,EAAE1C;MAAU;QAAAsD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,gBAEzBvE,OAAA;QAAAmE,QAAA,EAAG;MAAwB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAC/B;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACpE,EAAA,CA9KID,GAAG;AAAAqF,EAAA,GAAHrF,GAAG;AAgLT,eAAeA,GAAG;AAAC,IAAAqF,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}