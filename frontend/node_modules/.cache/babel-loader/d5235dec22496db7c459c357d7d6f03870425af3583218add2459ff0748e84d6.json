{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\manager\\\\Documents\\\\GitHub\\\\taraxa-live-chart\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Web3 from 'web3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [address, setAddress] = useState('');\n  const [events, setEvents] = useState([]);\n  const [filteredEvents, setFilteredEvents] = useState([]);\n  const [error, setError] = useState('');\n  const [logs, setLogs] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [itemsPerPage] = useState(10);\n  const [filter, setFilter] = useState('');\n  const [isFetching, setIsFetching] = useState(false);\n  const fetchTransferEvents = async () => {\n    if (!address) {\n      setError('Please enter a valid contract address.');\n      return;\n    }\n    try {\n      setError('');\n      setLogs([]);\n      setIsFetching(true);\n      setLogs(prevLogs => [...prevLogs, 'Initializing Web3...']);\n      const web3 = new Web3('http://37.27.107.225:7777');\n      setLogs(prevLogs => [...prevLogs, `Querying Transfer events for address: ${address}`]);\n\n      // Query the last 1000 blocks\n      const latestBlock = await web3.eth.getBlockNumber();\n      const fromBlock = Math.max(0, latestBlock - 1000); // Last 1000 blocks\n      const toBlock = latestBlock;\n      setLogs(prevLogs => [...prevLogs, `Querying from block ${fromBlock} to ${toBlock}`]);\n      const transferEvents = await web3.eth.getPastLogs({\n        address,\n        topics: [web3.utils.keccak256('Transfer(address,address,uint256)')],\n        fromBlock: web3.utils.toHex(fromBlock),\n        toBlock: web3.utils.toHex(toBlock)\n      });\n      if (transferEvents.length === 0) {\n        setLogs(prevLogs => [...prevLogs, 'No events found in the queried block range.']);\n        setEvents([]);\n        setFilteredEvents([]);\n      } else {\n        const formattedEvents = await Promise.all(transferEvents.map(async event => {\n          const block = await web3.eth.getBlock(event.blockNumber);\n          return {\n            from: `0x${event.topics[1].slice(26)}`,\n            to: `0x${event.topics[2].slice(26)}`,\n            value: web3.utils.hexToNumberString(event.data),\n            transactionHash: event.transactionHash,\n            timestamp: new Date(block.timestamp * 1000).toLocaleString()\n          };\n        }));\n        setEvents(formattedEvents);\n        setFilteredEvents(formattedEvents);\n        setLogs(prevLogs => [...prevLogs, `Found ${formattedEvents.length} Transfer events.`]);\n      }\n    } catch (err) {\n      setError(`Error occurred: ${err.message}`);\n      setLogs(prevLogs => [...prevLogs, `Error occurred: ${err.message}`]);\n    } finally {\n      setIsFetching(false);\n    }\n  };\n  const handleFilterChange = e => {\n    setFilter(e.target.value);\n    if (e.target.value) {\n      const filtered = events.filter(event => event.from.toLowerCase().includes(e.target.value.toLowerCase()) || event.to.toLowerCase().includes(e.target.value.toLowerCase()));\n      setFilteredEvents(filtered);\n    } else {\n      setFilteredEvents(events);\n    }\n  };\n  const handlePageChange = page => {\n    setCurrentPage(page);\n  };\n  const startLiveUpdates = () => {\n    setInterval(fetchTransferEvents, 5000); // Fetch new events every 5 seconds\n  };\n  useEffect(() => {\n    startLiveUpdates();\n    return () => clearInterval(startLiveUpdates); // Clean up interval on unmount\n  }, []);\n  const paginatedEvents = filteredEvents.slice((currentPage - 1) * itemsPerPage, currentPage * itemsPerPage);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '20px',\n      fontFamily: 'Arial, sans-serif'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Taraxa Live Chart Debugger\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: address,\n        onChange: e => setAddress(e.target.value),\n        placeholder: \"Enter Contract Address\",\n        style: {\n          width: '400px',\n          marginRight: '10px',\n          padding: '5px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchTransferEvents,\n        disabled: isFetching,\n        style: {\n          padding: '5px 10px',\n          cursor: isFetching ? 'not-allowed' : 'pointer'\n        },\n        children: isFetching ? 'Fetching...' : 'Fetch Data'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '10px'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: filter,\n        onChange: handleFilterChange,\n        placeholder: \"Filter by address\",\n        style: {\n          width: '300px',\n          padding: '5px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Logs:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: logs.map((log, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: log\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this), paginatedEvents.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Transfer Events (Page \", currentPage, \"):\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        style: {\n          width: '100%',\n          borderCollapse: 'collapse',\n          marginTop: '10px',\n          fontSize: '14px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                border: '1px solid #ddd',\n                padding: '8px'\n              },\n              children: \"From\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                border: '1px solid #ddd',\n                padding: '8px'\n              },\n              children: \"To\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                border: '1px solid #ddd',\n                padding: '8px'\n              },\n              children: \"Value\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                border: '1px solid #ddd',\n                padding: '8px'\n              },\n              children: \"Transaction Hash\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                border: '1px solid #ddd',\n                padding: '8px'\n              },\n              children: \"Timestamp\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: paginatedEvents.map((event, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              style: {\n                border: '1px solid #ddd',\n                padding: '8px'\n              },\n              children: event.from\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              style: {\n                border: '1px solid #ddd',\n                padding: '8px'\n              },\n              children: event.to\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              style: {\n                border: '1px solid #ddd',\n                padding: '8px'\n              },\n              children: event.value\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              style: {\n                border: '1px solid #ddd',\n                padding: '8px'\n              },\n              children: event.transactionHash\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              style: {\n                border: '1px solid #ddd',\n                padding: '8px'\n              },\n              children: event.timestamp\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '10px',\n          textAlign: 'center'\n        },\n        children: Array.from({\n          length: Math.ceil(filteredEvents.length / itemsPerPage)\n        }, (_, i) => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handlePageChange(i + 1),\n          style: {\n            margin: '0 5px',\n            padding: '5px 10px',\n            backgroundColor: currentPage === i + 1 ? '#007BFF' : '#f0f0f0',\n            color: currentPage === i + 1 ? '#fff' : '#000',\n            border: 'none',\n            borderRadius: '5px',\n            cursor: 'pointer'\n          },\n          children: i + 1\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"pGcCfoUU/E+zPyzXT0BE2x3BrrI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Web3","jsxDEV","_jsxDEV","App","_s","address","setAddress","events","setEvents","filteredEvents","setFilteredEvents","error","setError","logs","setLogs","currentPage","setCurrentPage","itemsPerPage","filter","setFilter","isFetching","setIsFetching","fetchTransferEvents","prevLogs","web3","latestBlock","eth","getBlockNumber","fromBlock","Math","max","toBlock","transferEvents","getPastLogs","topics","utils","keccak256","toHex","length","formattedEvents","Promise","all","map","event","block","getBlock","blockNumber","from","slice","to","value","hexToNumberString","data","transactionHash","timestamp","Date","toLocaleString","err","message","handleFilterChange","e","target","filtered","toLowerCase","includes","handlePageChange","page","startLiveUpdates","setInterval","clearInterval","paginatedEvents","style","padding","fontFamily","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","placeholder","width","marginRight","onClick","disabled","cursor","marginTop","color","log","index","borderCollapse","fontSize","border","textAlign","Array","ceil","_","i","margin","backgroundColor","borderRadius","_c","$RefreshReg$"],"sources":["C:/Users/manager/Documents/GitHub/taraxa-live-chart/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Web3 from 'web3';\r\n\r\nconst App = () => {\r\n  const [address, setAddress] = useState('');\r\n  const [events, setEvents] = useState([]);\r\n  const [filteredEvents, setFilteredEvents] = useState([]);\r\n  const [error, setError] = useState('');\r\n  const [logs, setLogs] = useState([]);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [itemsPerPage] = useState(10);\r\n  const [filter, setFilter] = useState('');\r\n  const [isFetching, setIsFetching] = useState(false);\r\n\r\n  const fetchTransferEvents = async () => {\r\n    if (!address) {\r\n      setError('Please enter a valid contract address.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setError('');\r\n      setLogs([]);\r\n      setIsFetching(true);\r\n      setLogs((prevLogs) => [...prevLogs, 'Initializing Web3...']);\r\n      const web3 = new Web3('http://37.27.107.225:7777');\r\n\r\n      setLogs((prevLogs) => [...prevLogs, `Querying Transfer events for address: ${address}`]);\r\n\r\n      // Query the last 1000 blocks\r\n      const latestBlock = await web3.eth.getBlockNumber();\r\n      const fromBlock = Math.max(0, latestBlock - 1000); // Last 1000 blocks\r\n      const toBlock = latestBlock;\r\n\r\n      setLogs((prevLogs) => [...prevLogs, `Querying from block ${fromBlock} to ${toBlock}`]);\r\n\r\n      const transferEvents = await web3.eth.getPastLogs({\r\n        address,\r\n        topics: [web3.utils.keccak256('Transfer(address,address,uint256)')],\r\n        fromBlock: web3.utils.toHex(fromBlock),\r\n        toBlock: web3.utils.toHex(toBlock),\r\n      });\r\n\r\n      if (transferEvents.length === 0) {\r\n        setLogs((prevLogs) => [...prevLogs, 'No events found in the queried block range.']);\r\n        setEvents([]);\r\n        setFilteredEvents([]);\r\n      } else {\r\n        const formattedEvents = await Promise.all(\r\n          transferEvents.map(async (event) => {\r\n            const block = await web3.eth.getBlock(event.blockNumber);\r\n            return {\r\n              from: `0x${event.topics[1].slice(26)}`,\r\n              to: `0x${event.topics[2].slice(26)}`,\r\n              value: web3.utils.hexToNumberString(event.data),\r\n              transactionHash: event.transactionHash,\r\n              timestamp: new Date(block.timestamp * 1000).toLocaleString(),\r\n            };\r\n          })\r\n        );\r\n\r\n        setEvents(formattedEvents);\r\n        setFilteredEvents(formattedEvents);\r\n        setLogs((prevLogs) => [...prevLogs, `Found ${formattedEvents.length} Transfer events.`]);\r\n      }\r\n    } catch (err) {\r\n      setError(`Error occurred: ${err.message}`);\r\n      setLogs((prevLogs) => [...prevLogs, `Error occurred: ${err.message}`]);\r\n    } finally {\r\n      setIsFetching(false);\r\n    }\r\n  };\r\n\r\n  const handleFilterChange = (e) => {\r\n    setFilter(e.target.value);\r\n    if (e.target.value) {\r\n      const filtered = events.filter(\r\n        (event) =>\r\n          event.from.toLowerCase().includes(e.target.value.toLowerCase()) ||\r\n          event.to.toLowerCase().includes(e.target.value.toLowerCase())\r\n      );\r\n      setFilteredEvents(filtered);\r\n    } else {\r\n      setFilteredEvents(events);\r\n    }\r\n  };\r\n\r\n  const handlePageChange = (page) => {\r\n    setCurrentPage(page);\r\n  };\r\n\r\n  const startLiveUpdates = () => {\r\n    setInterval(fetchTransferEvents, 5000); // Fetch new events every 5 seconds\r\n  };\r\n\r\n  useEffect(() => {\r\n    startLiveUpdates();\r\n    return () => clearInterval(startLiveUpdates); // Clean up interval on unmount\r\n  }, []);\r\n\r\n  const paginatedEvents = filteredEvents.slice(\r\n    (currentPage - 1) * itemsPerPage,\r\n    currentPage * itemsPerPage\r\n  );\r\n\r\n  return (\r\n    <div style={{ padding: '20px', fontFamily: 'Arial, sans-serif' }}>\r\n      <h1>Taraxa Live Chart Debugger</h1>\r\n      <div>\r\n        <input\r\n          type=\"text\"\r\n          value={address}\r\n          onChange={(e) => setAddress(e.target.value)}\r\n          placeholder=\"Enter Contract Address\"\r\n          style={{ width: '400px', marginRight: '10px', padding: '5px' }}\r\n        />\r\n        <button\r\n          onClick={fetchTransferEvents}\r\n          disabled={isFetching}\r\n          style={{ padding: '5px 10px', cursor: isFetching ? 'not-allowed' : 'pointer' }}\r\n        >\r\n          {isFetching ? 'Fetching...' : 'Fetch Data'}\r\n        </button>\r\n      </div>\r\n\r\n      <div style={{ marginTop: '10px' }}>\r\n        <input\r\n          type=\"text\"\r\n          value={filter}\r\n          onChange={handleFilterChange}\r\n          placeholder=\"Filter by address\"\r\n          style={{ width: '300px', padding: '5px' }}\r\n        />\r\n      </div>\r\n\r\n      {error && <p style={{ color: 'red' }}>{error}</p>}\r\n\r\n      <div>\r\n        <h3>Logs:</h3>\r\n        <ul>\r\n          {logs.map((log, index) => (\r\n            <li key={index}>{log}</li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n\r\n      {paginatedEvents.length > 0 && (\r\n        <div>\r\n          <h3>Transfer Events (Page {currentPage}):</h3>\r\n          <table\r\n            style={{\r\n              width: '100%',\r\n              borderCollapse: 'collapse',\r\n              marginTop: '10px',\r\n              fontSize: '14px',\r\n            }}\r\n          >\r\n            <thead>\r\n              <tr>\r\n                <th style={{ border: '1px solid #ddd', padding: '8px' }}>From</th>\r\n                <th style={{ border: '1px solid #ddd', padding: '8px' }}>To</th>\r\n                <th style={{ border: '1px solid #ddd', padding: '8px' }}>Value</th>\r\n                <th style={{ border: '1px solid #ddd', padding: '8px' }}>Transaction Hash</th>\r\n                <th style={{ border: '1px solid #ddd', padding: '8px' }}>Timestamp</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {paginatedEvents.map((event, index) => (\r\n                <tr key={index}>\r\n                  <td style={{ border: '1px solid #ddd', padding: '8px' }}>{event.from}</td>\r\n                  <td style={{ border: '1px solid #ddd', padding: '8px' }}>{event.to}</td>\r\n                  <td style={{ border: '1px solid #ddd', padding: '8px' }}>{event.value}</td>\r\n                  <td style={{ border: '1px solid #ddd', padding: '8px' }}>{event.transactionHash}</td>\r\n                  <td style={{ border: '1px solid #ddd', padding: '8px' }}>{event.timestamp}</td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n          <div style={{ marginTop: '10px', textAlign: 'center' }}>\r\n            {Array.from(\r\n              { length: Math.ceil(filteredEvents.length / itemsPerPage) },\r\n              (_, i) => (\r\n                <button\r\n                  key={i}\r\n                  onClick={() => handlePageChange(i + 1)}\r\n                  style={{\r\n                    margin: '0 5px',\r\n                    padding: '5px 10px',\r\n                    backgroundColor: currentPage === i + 1 ? '#007BFF' : '#f0f0f0',\r\n                    color: currentPage === i + 1 ? '#fff' : '#000',\r\n                    border: 'none',\r\n                    borderRadius: '5px',\r\n                    cursor: 'pointer',\r\n                  }}\r\n                >\r\n                  {i + 1}\r\n                </button>\r\n              )\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}