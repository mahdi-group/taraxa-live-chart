{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\manager\\\\Documents\\\\GitHub\\\\taraxa-live-chart\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Chart from './components/Chart';\nimport TransactionsFeed from './components/TransactionsFeed';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [address, setAddress] = useState('');\n  const [data, setData] = useState(null);\n  const fetchData = async () => {\n    try {\n      console.log(`Fetching data from http://localhost:5000/api/transactions/${address}`);\n      const response = await fetch(`http://localhost:5000/api/transactions/${address}`);\n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n      const result = await response.json();\n      console.log('API Response:', result); // Debug the API response\n      setData(result); // Save data to state\n    } catch (error) {\n      console.error('Error fetching data:', error); // Log errors\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '20px',\n      textAlign: 'center'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Taraxa Live Chart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => {\n        e.preventDefault(); // Prevent default form submission\n        fetchData(); // Call the API\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter Coin Address\",\n        value: address,\n        onChange: e => setAddress(e.target.value),\n        style: {\n          padding: '10px',\n          width: '300px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        style: {\n          marginLeft: '10px',\n          padding: '10px'\n        },\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), data ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Chart, {\n        data: data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TransactionsFeed, {\n        transactions: data.transactions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Please submit an address to see data.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"R1alT1J3aR7uYcdO3Ksagd1vtzI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Chart","TransactionsFeed","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","address","setAddress","data","setData","fetchData","console","log","response","fetch","ok","Error","status","result","json","error","style","padding","textAlign","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","e","preventDefault","type","placeholder","value","onChange","target","width","marginLeft","transactions","_c","$RefreshReg$"],"sources":["C:/Users/manager/Documents/GitHub/taraxa-live-chart/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Chart from './components/Chart';\r\nimport TransactionsFeed from './components/TransactionsFeed';\r\n\r\nconst App = () => {\r\n  const [address, setAddress] = useState('');\r\n  const [data, setData] = useState(null);\r\n\r\n  const fetchData = async () => {\r\n    try {\r\n      console.log(`Fetching data from http://localhost:5000/api/transactions/${address}`);\r\n      const response = await fetch(`http://localhost:5000/api/transactions/${address}`);\r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! Status: ${response.status}`);\r\n      }\r\n      const result = await response.json();\r\n      console.log('API Response:', result); // Debug the API response\r\n      setData(result); // Save data to state\r\n    } catch (error) {\r\n      console.error('Error fetching data:', error); // Log errors\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: '20px', textAlign: 'center' }}>\r\n      <h1>Taraxa Live Chart</h1>\r\n      <form\r\n        onSubmit={(e) => {\r\n          e.preventDefault(); // Prevent default form submission\r\n          fetchData(); // Call the API\r\n        }}\r\n      >\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Enter Coin Address\"\r\n          value={address}\r\n          onChange={(e) => setAddress(e.target.value)}\r\n          style={{ padding: '10px', width: '300px' }}\r\n        />\r\n        <button type=\"submit\" style={{ marginLeft: '10px', padding: '10px' }}>\r\n          Submit\r\n        </button>\r\n      </form>\r\n\r\n      {data ? (\r\n        <>\r\n          <Chart data={data} />\r\n          <TransactionsFeed transactions={data.transactions} />\r\n        </>\r\n      ) : (\r\n        <p>Please submit an address to see data.</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}