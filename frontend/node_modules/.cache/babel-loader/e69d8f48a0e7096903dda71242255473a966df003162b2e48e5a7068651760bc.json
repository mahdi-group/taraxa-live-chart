{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\manager\\\\Documents\\\\GitHub\\\\taraxa-live-chart\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Web3 from 'web3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [address, setAddress] = useState('');\n  const [data, setData] = useState([]);\n  const [error, setError] = useState('');\n  const [logs, setLogs] = useState([]);\n  const handleFetchData = async () => {\n    setError(''); // Clear previous errors\n    setLogs([]); // Clear previous logs\n    setData([]); // Clear previous data\n\n    if (!address) {\n      setError('Please enter a valid coin address.');\n      return;\n    }\n    try {\n      setLogs(prevLogs => [...prevLogs, 'Initializing Web3...']);\n      const web3 = new Web3('http://37.27.107.225:7777'); // Replace with your node's URL\n\n      setLogs(prevLogs => [...prevLogs, `Querying Transfer events for address: ${address}`]);\n\n      // Fetch past logs for Transfer events\n      const transferEventSignature = web3.utils.sha3('Transfer(address,address,uint256)');\n      const events = await web3.eth.getPastLogs({\n        fromBlock: 'earliest',\n        // Adjust the block range if necessary\n        toBlock: 'latest',\n        address,\n        // The token contract address\n        topics: [transferEventSignature]\n      });\n      setLogs(prevLogs => [...prevLogs, `Found ${events.length} Transfer events.`]);\n\n      // Parse the events\n      const parsedData = events.map(event => ({\n        from: `0x${event.topics[1].slice(26)}`,\n        to: `0x${event.topics[2].slice(26)}`,\n        value: web3.utils.fromWei(web3.utils.hexToNumberString(event.data), 'ether'),\n        transactionHash: event.transactionHash\n      }));\n      setData(parsedData);\n      setLogs(prevLogs => [...prevLogs, 'Data fetched successfully!']);\n    } catch (err) {\n      setError(`Error: ${err.message}`);\n      setLogs(prevLogs => [...prevLogs, `Error occurred: ${err.message}`]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '20px',\n      fontFamily: 'Arial, sans-serif'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Taraxa Live Chart Debugger\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: address,\n        onChange: e => setAddress(e.target.value),\n        placeholder: \"Enter Token Contract Address\",\n        style: {\n          width: '300px',\n          marginRight: '10px',\n          padding: '5px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleFetchData,\n        style: {\n          padding: '5px 10px'\n        },\n        children: \"Fetch Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Logs:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: logs.map((log, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: log\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), data.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Transfer Events:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        border: \"1\",\n        style: {\n          width: '100%',\n          textAlign: 'left'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"From\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"To\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Value\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Transaction Hash\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: data.map((item, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.from\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.to\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.value\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.transactionHash\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"O+fu/po5N2TTNlOZbCL/joDJX/0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Web3","jsxDEV","_jsxDEV","App","_s","address","setAddress","data","setData","error","setError","logs","setLogs","handleFetchData","prevLogs","web3","transferEventSignature","utils","sha3","events","eth","getPastLogs","fromBlock","toBlock","topics","length","parsedData","map","event","from","slice","to","value","fromWei","hexToNumberString","transactionHash","err","message","style","padding","fontFamily","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","e","target","placeholder","width","marginRight","onClick","color","log","index","border","textAlign","item","_c","$RefreshReg$"],"sources":["C:/Users/manager/Documents/GitHub/taraxa-live-chart/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Web3 from 'web3';\r\n\r\nconst App = () => {\r\n  const [address, setAddress] = useState('');\r\n  const [data, setData] = useState([]);\r\n  const [error, setError] = useState('');\r\n  const [logs, setLogs] = useState([]);\r\n\r\n  const handleFetchData = async () => {\r\n    setError(''); // Clear previous errors\r\n    setLogs([]);  // Clear previous logs\r\n    setData([]);  // Clear previous data\r\n\r\n    if (!address) {\r\n      setError('Please enter a valid coin address.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setLogs((prevLogs) => [...prevLogs, 'Initializing Web3...']);\r\n      const web3 = new Web3('http://37.27.107.225:7777'); // Replace with your node's URL\r\n\r\n      setLogs((prevLogs) => [...prevLogs, `Querying Transfer events for address: ${address}`]);\r\n\r\n      // Fetch past logs for Transfer events\r\n      const transferEventSignature = web3.utils.sha3('Transfer(address,address,uint256)');\r\n      const events = await web3.eth.getPastLogs({\r\n        fromBlock: 'earliest', // Adjust the block range if necessary\r\n        toBlock: 'latest',\r\n        address, // The token contract address\r\n        topics: [transferEventSignature],\r\n      });\r\n\r\n      setLogs((prevLogs) => [...prevLogs, `Found ${events.length} Transfer events.`]);\r\n\r\n      // Parse the events\r\n      const parsedData = events.map((event) => ({\r\n        from: `0x${event.topics[1].slice(26)}`,\r\n        to: `0x${event.topics[2].slice(26)}`,\r\n        value: web3.utils.fromWei(web3.utils.hexToNumberString(event.data), 'ether'),\r\n        transactionHash: event.transactionHash,\r\n      }));\r\n\r\n      setData(parsedData);\r\n      setLogs((prevLogs) => [...prevLogs, 'Data fetched successfully!']);\r\n    } catch (err) {\r\n      setError(`Error: ${err.message}`);\r\n      setLogs((prevLogs) => [...prevLogs, `Error occurred: ${err.message}`]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: '20px', fontFamily: 'Arial, sans-serif' }}>\r\n      <h1>Taraxa Live Chart Debugger</h1>\r\n      <div>\r\n        <input\r\n          type=\"text\"\r\n          value={address}\r\n          onChange={(e) => setAddress(e.target.value)}\r\n          placeholder=\"Enter Token Contract Address\"\r\n          style={{ width: '300px', marginRight: '10px', padding: '5px' }}\r\n        />\r\n        <button onClick={handleFetchData} style={{ padding: '5px 10px' }}>\r\n          Fetch Data\r\n        </button>\r\n      </div>\r\n\r\n      {error && <p style={{ color: 'red' }}>{error}</p>}\r\n\r\n      <div>\r\n        <h3>Logs:</h3>\r\n        <ul>\r\n          {logs.map((log, index) => (\r\n            <li key={index}>{log}</li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n\r\n      {data.length > 0 && (\r\n        <div>\r\n          <h3>Transfer Events:</h3>\r\n          <table border=\"1\" style={{ width: '100%', textAlign: 'left' }}>\r\n            <thead>\r\n              <tr>\r\n                <th>From</th>\r\n                <th>To</th>\r\n                <th>Value</th>\r\n                <th>Transaction Hash</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {data.map((item, index) => (\r\n                <tr key={index}>\r\n                  <td>{item.from}</td>\r\n                  <td>{item.to}</td>\r\n                  <td>{item.value}</td>\r\n                  <td>{item.transactionHash}</td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,IAAI,MAAM,MAAM;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExB,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACQ,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACY,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAEpC,MAAMc,eAAe,GAAG,MAAAA,CAAA,KAAY;IAClCH,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;IACdE,OAAO,CAAC,EAAE,CAAC,CAAC,CAAE;IACdJ,OAAO,CAAC,EAAE,CAAC,CAAC,CAAE;;IAEd,IAAI,CAACH,OAAO,EAAE;MACZK,QAAQ,CAAC,oCAAoC,CAAC;MAC9C;IACF;IAEA,IAAI;MACFE,OAAO,CAAEE,QAAQ,IAAK,CAAC,GAAGA,QAAQ,EAAE,sBAAsB,CAAC,CAAC;MAC5D,MAAMC,IAAI,GAAG,IAAIf,IAAI,CAAC,2BAA2B,CAAC,CAAC,CAAC;;MAEpDY,OAAO,CAAEE,QAAQ,IAAK,CAAC,GAAGA,QAAQ,EAAE,yCAAyCT,OAAO,EAAE,CAAC,CAAC;;MAExF;MACA,MAAMW,sBAAsB,GAAGD,IAAI,CAACE,KAAK,CAACC,IAAI,CAAC,mCAAmC,CAAC;MACnF,MAAMC,MAAM,GAAG,MAAMJ,IAAI,CAACK,GAAG,CAACC,WAAW,CAAC;QACxCC,SAAS,EAAE,UAAU;QAAE;QACvBC,OAAO,EAAE,QAAQ;QACjBlB,OAAO;QAAE;QACTmB,MAAM,EAAE,CAACR,sBAAsB;MACjC,CAAC,CAAC;MAEFJ,OAAO,CAAEE,QAAQ,IAAK,CAAC,GAAGA,QAAQ,EAAE,SAASK,MAAM,CAACM,MAAM,mBAAmB,CAAC,CAAC;;MAE/E;MACA,MAAMC,UAAU,GAAGP,MAAM,CAACQ,GAAG,CAAEC,KAAK,KAAM;QACxCC,IAAI,EAAE,KAAKD,KAAK,CAACJ,MAAM,CAAC,CAAC,CAAC,CAACM,KAAK,CAAC,EAAE,CAAC,EAAE;QACtCC,EAAE,EAAE,KAAKH,KAAK,CAACJ,MAAM,CAAC,CAAC,CAAC,CAACM,KAAK,CAAC,EAAE,CAAC,EAAE;QACpCE,KAAK,EAAEjB,IAAI,CAACE,KAAK,CAACgB,OAAO,CAAClB,IAAI,CAACE,KAAK,CAACiB,iBAAiB,CAACN,KAAK,CAACrB,IAAI,CAAC,EAAE,OAAO,CAAC;QAC5E4B,eAAe,EAAEP,KAAK,CAACO;MACzB,CAAC,CAAC,CAAC;MAEH3B,OAAO,CAACkB,UAAU,CAAC;MACnBd,OAAO,CAAEE,QAAQ,IAAK,CAAC,GAAGA,QAAQ,EAAE,4BAA4B,CAAC,CAAC;IACpE,CAAC,CAAC,OAAOsB,GAAG,EAAE;MACZ1B,QAAQ,CAAC,UAAU0B,GAAG,CAACC,OAAO,EAAE,CAAC;MACjCzB,OAAO,CAAEE,QAAQ,IAAK,CAAC,GAAGA,QAAQ,EAAE,mBAAmBsB,GAAG,CAACC,OAAO,EAAE,CAAC,CAAC;IACxE;EACF,CAAC;EAED,oBACEnC,OAAA;IAAKoC,KAAK,EAAE;MAAEC,OAAO,EAAE,MAAM;MAAEC,UAAU,EAAE;IAAoB,CAAE;IAAAC,QAAA,gBAC/DvC,OAAA;MAAAuC,QAAA,EAAI;IAA0B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnC3C,OAAA;MAAAuC,QAAA,gBACEvC,OAAA;QACE4C,IAAI,EAAC,MAAM;QACXd,KAAK,EAAE3B,OAAQ;QACf0C,QAAQ,EAAGC,CAAC,IAAK1C,UAAU,CAAC0C,CAAC,CAACC,MAAM,CAACjB,KAAK,CAAE;QAC5CkB,WAAW,EAAC,8BAA8B;QAC1CZ,KAAK,EAAE;UAAEa,KAAK,EAAE,OAAO;UAAEC,WAAW,EAAE,MAAM;UAAEb,OAAO,EAAE;QAAM;MAAE;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChE,CAAC,eACF3C,OAAA;QAAQmD,OAAO,EAAExC,eAAgB;QAACyB,KAAK,EAAE;UAAEC,OAAO,EAAE;QAAW,CAAE;QAAAE,QAAA,EAAC;MAElE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,EAELpC,KAAK,iBAAIP,OAAA;MAAGoC,KAAK,EAAE;QAAEgB,KAAK,EAAE;MAAM,CAAE;MAAAb,QAAA,EAAEhC;IAAK;MAAAiC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAEjD3C,OAAA;MAAAuC,QAAA,gBACEvC,OAAA;QAAAuC,QAAA,EAAI;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACd3C,OAAA;QAAAuC,QAAA,EACG9B,IAAI,CAACgB,GAAG,CAAC,CAAC4B,GAAG,EAAEC,KAAK,kBACnBtD,OAAA;UAAAuC,QAAA,EAAiBc;QAAG,GAAXC,KAAK;UAAAd,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAW,CAC1B;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC,EAELtC,IAAI,CAACkB,MAAM,GAAG,CAAC,iBACdvB,OAAA;MAAAuC,QAAA,gBACEvC,OAAA;QAAAuC,QAAA,EAAI;MAAgB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACzB3C,OAAA;QAAOuD,MAAM,EAAC,GAAG;QAACnB,KAAK,EAAE;UAAEa,KAAK,EAAE,MAAM;UAAEO,SAAS,EAAE;QAAO,CAAE;QAAAjB,QAAA,gBAC5DvC,OAAA;UAAAuC,QAAA,eACEvC,OAAA;YAAAuC,QAAA,gBACEvC,OAAA;cAAAuC,QAAA,EAAI;YAAI;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACb3C,OAAA;cAAAuC,QAAA,EAAI;YAAE;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACX3C,OAAA;cAAAuC,QAAA,EAAI;YAAK;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACd3C,OAAA;cAAAuC,QAAA,EAAI;YAAgB;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACvB;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC,eACR3C,OAAA;UAAAuC,QAAA,EACGlC,IAAI,CAACoB,GAAG,CAAC,CAACgC,IAAI,EAAEH,KAAK,kBACpBtD,OAAA;YAAAuC,QAAA,gBACEvC,OAAA;cAAAuC,QAAA,EAAKkB,IAAI,CAAC9B;YAAI;cAAAa,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACpB3C,OAAA;cAAAuC,QAAA,EAAKkB,IAAI,CAAC5B;YAAE;cAAAW,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eAClB3C,OAAA;cAAAuC,QAAA,EAAKkB,IAAI,CAAC3B;YAAK;cAAAU,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACrB3C,OAAA;cAAAuC,QAAA,EAAKkB,IAAI,CAACxB;YAAe;cAAAO,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC;UAAA,GAJxBW,KAAK;YAAAd,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAKV,CACL;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACzC,EAAA,CAvGID,GAAG;AAAAyD,EAAA,GAAHzD,GAAG;AAyGT,eAAeA,GAAG;AAAC,IAAAyD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}