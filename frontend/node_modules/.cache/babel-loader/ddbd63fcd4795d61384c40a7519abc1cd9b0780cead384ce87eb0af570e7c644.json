{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\manager\\\\Documents\\\\GitHub\\\\taraxa-live-chart\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Web3 from 'web3';\nimport { Line } from 'react-chartjs-2';\nimport { Chart as ChartJS, LineElement, CategoryScale, LinearScale, PointElement, Tooltip, Legend } from 'chart.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(LineElement, CategoryScale, LinearScale, PointElement, Tooltip, Legend);\nconst App = () => {\n  _s();\n  const [address, setAddress] = useState('');\n  const [events, setEvents] = useState([]);\n  const [error, setError] = useState('');\n  const [logs, setLogs] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [chartData, setChartData] = useState(null);\n  const [tokenPrice, setTokenPrice] = useState(null);\n  const pageSize = 10;\n  const knownPoolAddress = \"0xE9ba4dB22e58D5887fc67dbf8dB2b9516352315e\"; // Replace with the actual pool address\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      if (address) {\n        fetchTransferEvents();\n      }\n    }, 5000); // Poll every 5 seconds\n\n    return () => clearInterval(interval);\n  }, [address]);\n  const fetchLiquidityPoolData = async (web3, poolAddress) => {\n    const poolContract = new web3.eth.Contract([{\n      constant: true,\n      inputs: [],\n      name: 'getReserves',\n      outputs: [{\n        name: '_reserve0',\n        type: 'uint112'\n      }, {\n        name: '_reserve1',\n        type: 'uint112'\n      }, {\n        name: '_blockTimestampLast',\n        type: 'uint32'\n      }],\n      type: 'function'\n    }, {\n      constant: true,\n      inputs: [],\n      name: 'token0',\n      outputs: [{\n        name: '',\n        type: 'address'\n      }],\n      type: 'function'\n    }, {\n      constant: true,\n      inputs: [],\n      name: 'token1',\n      outputs: [{\n        name: '',\n        type: 'address'\n      }],\n      type: 'function'\n    }], poolAddress);\n\n    // Fetch reserves and token addresses\n    const reserves = await poolContract.methods.getReserves().call();\n    const token0 = await poolContract.methods.token0().call();\n    const token1 = await poolContract.methods.token1().call();\n\n    // Extract reserves as numbers\n    const reserve0 = Number(reserves._reserve0);\n    const reserve1 = Number(reserves._reserve1);\n    return {\n      reserve0,\n      reserve1,\n      token0,\n      token1\n    };\n  };\n  const calculatePrice = (reserve0, reserve1, targetToken, token0, token1) => {\n    if (targetToken.toLowerCase() === token0.toLowerCase()) {\n      return parseFloat(reserve1) / parseFloat(reserve0);\n    } else if (targetToken.toLowerCase() === token1.toLowerCase()) {\n      return parseFloat(reserve0) / parseFloat(reserve1);\n    }\n    return null;\n  };\n  const fetchTransferEvents = async () => {\n    setError('');\n    setLogs([]);\n    if (!address) {\n      setError('Please enter a valid contract address.');\n      return;\n    }\n    try {\n      setLogs(prev => [...prev, 'Initializing Web3...']);\n      const web3 = new Web3('http://37.27.107.225:7777'); // Your node address\n\n      // Fetch liquidity pool data and calculate price\n      const poolData = await fetchLiquidityPoolData(web3, knownPoolAddress);\n      const price = calculatePrice(poolData.reserve0, poolData.reserve1, address, poolData.token0, poolData.token1);\n      setTokenPrice(price);\n      setLogs(prev => [...prev, `Current Token Price: ${price.toFixed(6)}`]);\n      setLogs(prev => [...prev, `Querying Transfer events for address: ${address}`]);\n      const contract = new web3.eth.Contract([{\n        anonymous: false,\n        inputs: [{\n          indexed: true,\n          name: 'from',\n          type: 'address'\n        }, {\n          indexed: true,\n          name: 'to',\n          type: 'address'\n        }, {\n          indexed: false,\n          name: 'value',\n          type: 'uint256'\n        }],\n        name: 'Transfer',\n        type: 'event'\n      }], address);\n      const latestBlock = await web3.eth.getBlockNumber();\n      const fromBlock = Math.max(Number(latestBlock) - 500000, 0);\n      setLogs(prev => [...prev, `Querying from block ${fromBlock} to ${latestBlock}`]);\n      const pastEvents = await contract.getPastEvents('Transfer', {\n        fromBlock: fromBlock.toString(),\n        toBlock: 'latest'\n      });\n      setLogs(prev => [...prev, `Fetched ${pastEvents.length} Transfer events.`]);\n      const buyAndSellEvents = pastEvents.filter(event => {\n        const {\n          from,\n          to\n        } = event.returnValues;\n        return from.toLowerCase() === knownPoolAddress.toLowerCase() || to.toLowerCase() === knownPoolAddress.toLowerCase();\n      });\n      setLogs(prev => [...prev, `Filtered ${buyAndSellEvents.length} Buy/Sell events.`]);\n      const formattedEvents = buyAndSellEvents.map(event => ({\n        from: event.returnValues.from,\n        to: event.returnValues.to,\n        value: BigInt(event.returnValues.value).toString(),\n        transactionHash: event.transactionHash,\n        blockNumber: event.blockNumber,\n        timestamp: new Date().toISOString(),\n        type: event.returnValues.to.toLowerCase() === knownPoolAddress.toLowerCase() ? 'Buy' : 'Sell'\n      }));\n      setEvents(prev => {\n        const allEvents = [...formattedEvents, ...prev];\n        const uniqueEvents = Array.from(new Set(allEvents.map(e => e.transactionHash))).map(hash => allEvents.find(e => e.transactionHash === hash));\n        return uniqueEvents.slice(0, 1000); // Keep latest 1000 transactions\n      });\n      const chartLabels = formattedEvents.map(e => e.timestamp);\n      const chartValues = formattedEvents.map(e => parseFloat(e.value));\n      setChartData({\n        labels: chartLabels,\n        datasets: [{\n          label: 'Transaction Values',\n          data: chartValues,\n          borderColor: 'rgba(75, 192, 192, 1)',\n          borderWidth: 2,\n          fill: false\n        }]\n      });\n    } catch (err) {\n      setError(`Error occurred: ${err.message}`);\n      setLogs(prev => [...prev, `Error occurred: ${err.message}`]);\n    }\n  };\n  const paginatedEvents = events.slice((currentPage - 1) * pageSize, currentPage * pageSize);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '20px',\n      fontFamily: 'Arial, sans-serif'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Taraxa Live Chart Debugger\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: address,\n        onChange: e => setAddress(e.target.value),\n        placeholder: \"Enter Contract Address\",\n        style: {\n          width: '300px',\n          marginRight: '10px',\n          padding: '5px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchTransferEvents,\n        style: {\n          padding: '5px 10px'\n        },\n        children: \"Fetch Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Logs:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: logs.map((log, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: log\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Transfer Events:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        border: \"1\",\n        style: {\n          width: '100%',\n          borderCollapse: 'collapse'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"From\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"To\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Value\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Price/Token\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Timestamp\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Transaction Hash\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: paginatedEvents.map((event, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            style: {\n              backgroundColor: event.type === 'Sell' ? 'red' : event.type === 'Buy' ? 'green' : 'white',\n              color: 'white'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: event.from\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: event.to\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: event.value\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [\"$\", tokenPrice ? tokenPrice.toFixed(6) : 'N/A']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: event.timestamp\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: event.transactionHash\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: event.type\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setCurrentPage(prev => Math.max(prev - 1, 1)),\n          disabled: currentPage === 1,\n          children: \"Previous\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            margin: '0 10px'\n          },\n          children: [\"Page \", currentPage]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setCurrentPage(prev => prev * pageSize < events.length ? prev + 1 : prev),\n          disabled: currentPage * pageSize >= events.length,\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Transaction Chart:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 9\n      }, this), chartData ? /*#__PURE__*/_jsxDEV(Line, {\n        data: chartData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No chart data available.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 192,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"46+1O41tQZI4BF/yumxIBKNigCU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Web3","Line","Chart","ChartJS","LineElement","CategoryScale","LinearScale","PointElement","Tooltip","Legend","jsxDEV","_jsxDEV","register","App","_s","address","setAddress","events","setEvents","error","setError","logs","setLogs","currentPage","setCurrentPage","chartData","setChartData","tokenPrice","setTokenPrice","pageSize","knownPoolAddress","interval","setInterval","fetchTransferEvents","clearInterval","fetchLiquidityPoolData","web3","poolAddress","poolContract","eth","Contract","constant","inputs","name","outputs","type","reserves","methods","getReserves","call","token0","token1","reserve0","Number","_reserve0","reserve1","_reserve1","calculatePrice","targetToken","toLowerCase","parseFloat","prev","poolData","price","toFixed","contract","anonymous","indexed","latestBlock","getBlockNumber","fromBlock","Math","max","pastEvents","getPastEvents","toString","toBlock","length","buyAndSellEvents","filter","event","from","to","returnValues","formattedEvents","map","value","BigInt","transactionHash","blockNumber","timestamp","Date","toISOString","allEvents","uniqueEvents","Array","Set","e","hash","find","slice","chartLabels","chartValues","labels","datasets","label","data","borderColor","borderWidth","fill","err","message","paginatedEvents","style","padding","fontFamily","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","target","placeholder","width","marginRight","onClick","color","log","index","border","borderCollapse","backgroundColor","disabled","margin","_c","$RefreshReg$"],"sources":["C:/Users/manager/Documents/GitHub/taraxa-live-chart/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Web3 from 'web3';\r\nimport { Line } from 'react-chartjs-2';\r\nimport {\r\n  Chart as ChartJS,\r\n  LineElement,\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  Tooltip,\r\n  Legend,\r\n} from 'chart.js';\r\n\r\nChartJS.register(LineElement, CategoryScale, LinearScale, PointElement, Tooltip, Legend);\r\n\r\nconst App = () => {\r\n  const [address, setAddress] = useState('');\r\n  const [events, setEvents] = useState([]);\r\n  const [error, setError] = useState('');\r\n  const [logs, setLogs] = useState([]);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [chartData, setChartData] = useState(null);\r\n  const [tokenPrice, setTokenPrice] = useState(null);\r\n  const pageSize = 10;\r\n\r\n  const knownPoolAddress = \"0xE9ba4dB22e58D5887fc67dbf8dB2b9516352315e\"; // Replace with the actual pool address\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      if (address) {\r\n        fetchTransferEvents();\r\n      }\r\n    }, 5000); // Poll every 5 seconds\r\n\r\n    return () => clearInterval(interval);\r\n  }, [address]);\r\n\r\n  const fetchLiquidityPoolData = async (web3, poolAddress) => {\r\n  const poolContract = new web3.eth.Contract(\r\n    [\r\n      {\r\n        constant: true,\r\n        inputs: [],\r\n        name: 'getReserves',\r\n        outputs: [\r\n          { name: '_reserve0', type: 'uint112' },\r\n          { name: '_reserve1', type: 'uint112' },\r\n          { name: '_blockTimestampLast', type: 'uint32' },\r\n        ],\r\n        type: 'function',\r\n      },\r\n      {\r\n        constant: true,\r\n        inputs: [],\r\n        name: 'token0',\r\n        outputs: [{ name: '', type: 'address' }],\r\n        type: 'function',\r\n      },\r\n      {\r\n        constant: true,\r\n        inputs: [],\r\n        name: 'token1',\r\n        outputs: [{ name: '', type: 'address' }],\r\n        type: 'function',\r\n      },\r\n    ],\r\n    poolAddress\r\n  );\r\n\r\n  // Fetch reserves and token addresses\r\n  const reserves = await poolContract.methods.getReserves().call();\r\n  const token0 = await poolContract.methods.token0().call();\r\n  const token1 = await poolContract.methods.token1().call();\r\n\r\n  // Extract reserves as numbers\r\n  const reserve0 = Number(reserves._reserve0);\r\n  const reserve1 = Number(reserves._reserve1);\r\n\r\n  return { reserve0, reserve1, token0, token1 };\r\n};\r\n\r\n\r\n  const calculatePrice = (reserve0, reserve1, targetToken, token0, token1) => {\r\n    if (targetToken.toLowerCase() === token0.toLowerCase()) {\r\n      return parseFloat(reserve1) / parseFloat(reserve0);\r\n    } else if (targetToken.toLowerCase() === token1.toLowerCase()) {\r\n      return parseFloat(reserve0) / parseFloat(reserve1);\r\n    }\r\n    return null;\r\n  };\r\n\r\n  const fetchTransferEvents = async () => {\r\n    setError('');\r\n    setLogs([]);\r\n\r\n    if (!address) {\r\n      setError('Please enter a valid contract address.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setLogs((prev) => [...prev, 'Initializing Web3...']);\r\n      const web3 = new Web3('http://37.27.107.225:7777'); // Your node address\r\n\r\n      // Fetch liquidity pool data and calculate price\r\n      const poolData = await fetchLiquidityPoolData(web3, knownPoolAddress);\r\n      const price = calculatePrice(poolData.reserve0, poolData.reserve1, address, poolData.token0, poolData.token1);\r\n      setTokenPrice(price);\r\n\r\n      setLogs((prev) => [...prev, `Current Token Price: ${price.toFixed(6)}`]);\r\n\r\n      setLogs((prev) => [...prev, `Querying Transfer events for address: ${address}`]);\r\n      const contract = new web3.eth.Contract(\r\n        [\r\n          {\r\n            anonymous: false,\r\n            inputs: [\r\n              { indexed: true, name: 'from', type: 'address' },\r\n              { indexed: true, name: 'to', type: 'address' },\r\n              { indexed: false, name: 'value', type: 'uint256' },\r\n            ],\r\n            name: 'Transfer',\r\n            type: 'event',\r\n          },\r\n        ],\r\n        address\r\n      );\r\n\r\n      const latestBlock = await web3.eth.getBlockNumber();\r\n      const fromBlock = Math.max(Number(latestBlock) - 500000, 0);\r\n\r\n      setLogs((prev) => [...prev, `Querying from block ${fromBlock} to ${latestBlock}`]);\r\n\r\n      const pastEvents = await contract.getPastEvents('Transfer', {\r\n        fromBlock: fromBlock.toString(),\r\n        toBlock: 'latest',\r\n      });\r\n\r\n      setLogs((prev) => [...prev, `Fetched ${pastEvents.length} Transfer events.`]);\r\n\r\n      const buyAndSellEvents = pastEvents.filter((event) => {\r\n        const { from, to } = event.returnValues;\r\n        return (\r\n          from.toLowerCase() === knownPoolAddress.toLowerCase() ||\r\n          to.toLowerCase() === knownPoolAddress.toLowerCase()\r\n        );\r\n      });\r\n\r\n      setLogs((prev) => [...prev, `Filtered ${buyAndSellEvents.length} Buy/Sell events.`]);\r\n\r\n      const formattedEvents = buyAndSellEvents.map((event) => ({\r\n        from: event.returnValues.from,\r\n        to: event.returnValues.to,\r\n        value: BigInt(event.returnValues.value).toString(),\r\n        transactionHash: event.transactionHash,\r\n        blockNumber: event.blockNumber,\r\n        timestamp: new Date().toISOString(),\r\n        type: event.returnValues.to.toLowerCase() === knownPoolAddress.toLowerCase() ? 'Buy' : 'Sell',\r\n      }));\r\n\r\n      setEvents((prev) => {\r\n        const allEvents = [...formattedEvents, ...prev];\r\n        const uniqueEvents = Array.from(new Set(allEvents.map((e) => e.transactionHash)))\r\n          .map((hash) => allEvents.find((e) => e.transactionHash === hash));\r\n        return uniqueEvents.slice(0, 1000); // Keep latest 1000 transactions\r\n      });\r\n\r\n      const chartLabels = formattedEvents.map((e) => e.timestamp);\r\n      const chartValues = formattedEvents.map((e) => parseFloat(e.value));\r\n\r\n      setChartData({\r\n        labels: chartLabels,\r\n        datasets: [\r\n          {\r\n            label: 'Transaction Values',\r\n            data: chartValues,\r\n            borderColor: 'rgba(75, 192, 192, 1)',\r\n            borderWidth: 2,\r\n            fill: false,\r\n          },\r\n        ],\r\n      });\r\n    } catch (err) {\r\n      setError(`Error occurred: ${err.message}`);\r\n      setLogs((prev) => [...prev, `Error occurred: ${err.message}`]);\r\n    }\r\n  };\r\n\r\n  const paginatedEvents = events.slice((currentPage - 1) * pageSize, currentPage * pageSize);\r\n\r\n  return (\r\n    <div style={{ padding: '20px', fontFamily: 'Arial, sans-serif' }}>\r\n      <h1>Taraxa Live Chart Debugger</h1>\r\n\r\n      <div>\r\n        <input\r\n          type=\"text\"\r\n          value={address}\r\n          onChange={(e) => setAddress(e.target.value)}\r\n          placeholder=\"Enter Contract Address\"\r\n          style={{ width: '300px', marginRight: '10px', padding: '5px' }}\r\n        />\r\n        <button onClick={fetchTransferEvents} style={{ padding: '5px 10px' }}>\r\n          Fetch Data\r\n        </button>\r\n      </div>\r\n\r\n      {error && <p style={{ color: 'red' }}>{error}</p>}\r\n\r\n      <div>\r\n        <h3>Logs:</h3>\r\n        <ul>\r\n          {logs.map((log, index) => (\r\n            <li key={index}>{log}</li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n\r\n      <div>\r\n        <h3>Transfer Events:</h3>\r\n        <table border=\"1\" style={{ width: '100%', borderCollapse: 'collapse' }}>\r\n          <thead>\r\n            <tr>\r\n              <th>From</th>\r\n              <th>To</th>\r\n              <th>Value</th>\r\n              <th>Price/Token</th>\r\n              <th>Timestamp</th>\r\n              <th>Transaction Hash</th>\r\n              <th>Type</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {paginatedEvents.map((event, index) => (\r\n              <tr\r\n                key={index}\r\n                style={{\r\n                  backgroundColor: event.type === 'Sell' ? 'red' : event.type === 'Buy' ? 'green' : 'white',\r\n                  color: 'white',\r\n                }}\r\n              >\r\n                <td>{event.from}</td>\r\n                <td>{event.to}</td>\r\n                <td>{event.value}</td>\r\n                <td>${tokenPrice ? tokenPrice.toFixed(6) : 'N/A'}</td>\r\n                <td>{event.timestamp}</td>\r\n                <td>{event.transactionHash}</td>\r\n                <td>{event.type}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n        <div>\r\n          <button\r\n            onClick={() => setCurrentPage((prev) => Math.max(prev - 1, 1))}\r\n            disabled={currentPage === 1}\r\n          >\r\n            Previous\r\n          </button>\r\n          <span style={{ margin: '0 10px' }}>Page {currentPage}</span>\r\n          <button\r\n            onClick={() =>\r\n              setCurrentPage((prev) =>\r\n                prev * pageSize < events.length ? prev + 1 : prev\r\n              )\r\n            }\r\n            disabled={currentPage * pageSize >= events.length}\r\n          >\r\n            Next\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <div>\r\n        <h3>Transaction Chart:</h3>\r\n        {chartData ? (\r\n          <Line data={chartData} />\r\n        ) : (\r\n          <p>No chart data available.</p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}