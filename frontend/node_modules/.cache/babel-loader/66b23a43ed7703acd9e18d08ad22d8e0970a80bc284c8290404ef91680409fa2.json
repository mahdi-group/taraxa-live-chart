{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\manager\\\\Documents\\\\GitHub\\\\taraxa-live-chart\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Web3 from 'web3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NODE_URL = 'http://37.27.107.225:7777'; // Replace with your node's RPC URL\nconst web3 = new Web3(new Web3.providers.HttpProvider(NODE_URL));\nconst CONTRACT_ADDRESS = '0x063F255689b00A877F6be55109b3ECA24e266809';\nfunction App() {\n  _s();\n  const [walletAddress, setWalletAddress] = useState('');\n  const [transactions, setTransactions] = useState([]);\n  const [error, setError] = useState(null);\n  const fetchTransactions = async address => {\n    try {\n      // Example of fetching wallet transactions\n      const logs = await web3.eth.getPastLogs({\n        fromBlock: '0x0',\n        // Or the block number you want to start from\n        address: address\n      });\n      setTransactions(logs);\n      setError(null);\n    } catch (err) {\n      console.error('Error fetching transactions:', err);\n      setError('Failed to fetch transactions. Please try again.');\n    }\n  };\n  const handleInputChange = e => {\n    setWalletAddress(e.target.value);\n  };\n  const handleQuery = () => {\n    if (web3.utils.isAddress(walletAddress)) {\n      fetchTransactions(walletAddress);\n    } else {\n      setError('Invalid wallet address.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Taraxa Live Chart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter Wallet Address\",\n        value: walletAddress,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleQuery,\n        children: \"Fetch Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Transactions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: transactions.map((tx, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Block: \", tx.blockNumber]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Hash: \", tx.transactionHash]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"p55dLZRJRy1jWIUqmifLcT6g7/4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Web3","jsxDEV","_jsxDEV","NODE_URL","web3","providers","HttpProvider","CONTRACT_ADDRESS","App","_s","walletAddress","setWalletAddress","transactions","setTransactions","error","setError","fetchTransactions","address","logs","eth","getPastLogs","fromBlock","err","console","handleInputChange","e","target","value","handleQuery","utils","isAddress","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","onClick","map","tx","index","blockNumber","transactionHash","_c","$RefreshReg$"],"sources":["C:/Users/manager/Documents/GitHub/taraxa-live-chart/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Web3 from 'web3';\r\n\r\nconst NODE_URL = 'http://37.27.107.225:7777'; // Replace with your node's RPC URL\r\nconst web3 = new Web3(new Web3.providers.HttpProvider(NODE_URL));\r\nconst CONTRACT_ADDRESS = '0x063F255689b00A877F6be55109b3ECA24e266809';\r\n\r\nfunction App() {\r\n  const [walletAddress, setWalletAddress] = useState('');\r\n  const [transactions, setTransactions] = useState([]);\r\n  const [error, setError] = useState(null);\r\n\r\n  const fetchTransactions = async (address) => {\r\n    try {\r\n      // Example of fetching wallet transactions\r\n      const logs = await web3.eth.getPastLogs({\r\n        fromBlock: '0x0', // Or the block number you want to start from\r\n        address: address,\r\n      });\r\n\r\n      setTransactions(logs);\r\n      setError(null);\r\n    } catch (err) {\r\n      console.error('Error fetching transactions:', err);\r\n      setError('Failed to fetch transactions. Please try again.');\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    setWalletAddress(e.target.value);\r\n  };\r\n\r\n  const handleQuery = () => {\r\n    if (web3.utils.isAddress(walletAddress)) {\r\n      fetchTransactions(walletAddress);\r\n    } else {\r\n      setError('Invalid wallet address.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <h1>Taraxa Live Chart</h1>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Enter Wallet Address\"\r\n          value={walletAddress}\r\n          onChange={handleInputChange}\r\n        />\r\n        <button onClick={handleQuery}>Fetch Data</button>\r\n        {error && <p className=\"error\">{error}</p>}\r\n        <div>\r\n          <h2>Transactions</h2>\r\n          <ul>\r\n            {transactions.map((tx, index) => (\r\n              <li key={index}>\r\n                <p>Block: {tx.blockNumber}</p>\r\n                <p>Hash: {tx.transactionHash}</p>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}