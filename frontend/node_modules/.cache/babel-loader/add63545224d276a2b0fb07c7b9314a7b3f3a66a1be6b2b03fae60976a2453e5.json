{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\manager\\\\Documents\\\\GitHub\\\\taraxa-live-chart\\\\frontend\\\\src\\\\components\\\\Chart.js\";\nimport React from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chart = ({\n  data\n}) => {\n  if (!data || !data.transactions || data.transactions.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No data available for the chart.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 12\n    }, this);\n  }\n  const chartData = {\n    labels: data.transactions.map(tx => new Date(tx.timestamp).toLocaleTimeString()),\n    datasets: [{\n      label: 'Price',\n      data: data.transactions.map(tx => tx.price || 0),\n      // Use 0 if price is missing\n      borderColor: 'blue',\n      backgroundColor: 'rgba(0, 0, 255, 0.2)',\n      fill: true\n    }]\n  };\n  const options = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'top'\n      },\n      title: {\n        display: true,\n        text: 'Live Price Chart'\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Line, {\n    data: chartData,\n    options: options\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 10\n  }, this);\n};\n_c = Chart;\nexport default Chart;\nvar _c;\n$RefreshReg$(_c, \"Chart\");","map":{"version":3,"names":["React","Line","jsxDEV","_jsxDEV","Chart","data","transactions","length","children","fileName","_jsxFileName","lineNumber","columnNumber","chartData","labels","map","tx","Date","timestamp","toLocaleTimeString","datasets","label","price","borderColor","backgroundColor","fill","options","responsive","plugins","legend","position","title","display","text","_c","$RefreshReg$"],"sources":["C:/Users/manager/Documents/GitHub/taraxa-live-chart/frontend/src/components/Chart.js"],"sourcesContent":["import React from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\n\r\nconst Chart = ({ data }) => {\r\n  if (!data || !data.transactions || data.transactions.length === 0) {\r\n    return <p>No data available for the chart.</p>;\r\n  }\r\n\r\n  const chartData = {\r\n    labels: data.transactions.map((tx) => new Date(tx.timestamp).toLocaleTimeString()),\r\n    datasets: [\r\n      {\r\n        label: 'Price',\r\n        data: data.transactions.map((tx) => tx.price || 0), // Use 0 if price is missing\r\n        borderColor: 'blue',\r\n        backgroundColor: 'rgba(0, 0, 255, 0.2)',\r\n        fill: true,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const options = {\r\n    responsive: true,\r\n    plugins: {\r\n      legend: {\r\n        position: 'top',\r\n      },\r\n      title: {\r\n        display: true,\r\n        text: 'Live Price Chart',\r\n      },\r\n    },\r\n  };\r\n\r\n  return <Line data={chartData} options={options} />;\r\n};\r\n\r\nexport default Chart;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,KAAK,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EAC1B,IAAI,CAACA,IAAI,IAAI,CAACA,IAAI,CAACC,YAAY,IAAID,IAAI,CAACC,YAAY,CAACC,MAAM,KAAK,CAAC,EAAE;IACjE,oBAAOJ,OAAA;MAAAK,QAAA,EAAG;IAAgC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAChD;EAEA,MAAMC,SAAS,GAAG;IAChBC,MAAM,EAAET,IAAI,CAACC,YAAY,CAACS,GAAG,CAAEC,EAAE,IAAK,IAAIC,IAAI,CAACD,EAAE,CAACE,SAAS,CAAC,CAACC,kBAAkB,CAAC,CAAC,CAAC;IAClFC,QAAQ,EAAE,CACR;MACEC,KAAK,EAAE,OAAO;MACdhB,IAAI,EAAEA,IAAI,CAACC,YAAY,CAACS,GAAG,CAAEC,EAAE,IAAKA,EAAE,CAACM,KAAK,IAAI,CAAC,CAAC;MAAE;MACpDC,WAAW,EAAE,MAAM;MACnBC,eAAe,EAAE,sBAAsB;MACvCC,IAAI,EAAE;IACR,CAAC;EAEL,CAAC;EAED,MAAMC,OAAO,GAAG;IACdC,UAAU,EAAE,IAAI;IAChBC,OAAO,EAAE;MACPC,MAAM,EAAE;QACNC,QAAQ,EAAE;MACZ,CAAC;MACDC,KAAK,EAAE;QACLC,OAAO,EAAE,IAAI;QACbC,IAAI,EAAE;MACR;IACF;EACF,CAAC;EAED,oBAAO9B,OAAA,CAACF,IAAI;IAACI,IAAI,EAAEQ,SAAU;IAACa,OAAO,EAAEA;EAAQ;IAAAjB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACpD,CAAC;AAACsB,EAAA,GAhCI9B,KAAK;AAkCX,eAAeA,KAAK;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}