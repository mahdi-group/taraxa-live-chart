{"ast":null,"code":"var _jsxFileName = \"D:\\\\GitHub\\\\taraxa-live-chart\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Web3 from \"web3\";\nimport { Chart, registerables } from \"chart.js\";\nimport { CandlestickController, CandlestickElement, OhlcController, OhlcElement } from \"chartjs-chart-financial\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChart.register(...registerables, CandlestickController, CandlestickElement, OhlcController, OhlcElement);\nconst App = () => {\n  _s();\n  const [lpAddress, setLpAddress] = useState(\"\");\n  const [transactions, setTransactions] = useState([]);\n  const [candlestickData, setCandlestickData] = useState([]);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const nodeUrl = \"http://46.4.138.103:7777\";\n  const abi = [{\n    anonymous: false,\n    inputs: [{\n      indexed: true,\n      internalType: \"address\",\n      name: \"from\",\n      type: \"address\"\n    }, {\n      indexed: true,\n      internalType: \"address\",\n      name: \"to\",\n      type: \"address\"\n    }, {\n      indexed: false,\n      internalType: \"uint256\",\n      name: \"value\",\n      type: \"uint256\"\n    }],\n    name: \"Transfer\",\n    type: \"event\"\n  }];\n  const fetchTransactions = async () => {\n    if (!lpAddress) {\n      setErrorMessage(\"Please enter a valid LP address.\");\n      return;\n    }\n    setErrorMessage(\"\");\n    setTransactions([]);\n    try {\n      const web3 = new Web3(nodeUrl);\n      const contract = new web3.eth.Contract(abi, lpAddress);\n      const events = await contract.getPastEvents(\"Transfer\", {\n        fromBlock: \"earliest\",\n        toBlock: \"latest\"\n      });\n      const processedTransactions = events.filter(event => event.returnValues.from.toLowerCase() === lpAddress.toLowerCase() || event.returnValues.to.toLowerCase() === lpAddress.toLowerCase()).map(event => {\n        const {\n          from,\n          to,\n          value\n        } = event.returnValues;\n        const direction = to.toLowerCase() === lpAddress.toLowerCase() ? \"Buy\" : \"Sell\";\n        return {\n          from,\n          to,\n          value: web3.utils.fromWei(value, \"ether\"),\n          direction,\n          transactionHash: event.transactionHash\n        };\n      });\n      setTransactions(processedTransactions);\n      generateCandlestickData(processedTransactions);\n    } catch (error) {\n      console.error(\"Error fetching transactions:\", error);\n      setErrorMessage(\"Failed to fetch transactions. Check the LP address or ABI.\");\n    }\n  };\n  const generateCandlestickData = transactions => {\n    const groupedByTime = {}; // Group transactions by minute/hour (based on requirement)\n\n    transactions.forEach(tx => {\n      const timestamp = Math.floor(Date.now() / 60000) * 60000; // Adjust to round time to minute/hour\n      const value = parseFloat(tx.value);\n      if (!groupedByTime[timestamp]) {\n        groupedByTime[timestamp] = {\n          open: value,\n          high: value,\n          low: value,\n          close: value\n        };\n      } else {\n        groupedByTime[timestamp].high = Math.max(groupedByTime[timestamp].high, value);\n        groupedByTime[timestamp].low = Math.min(groupedByTime[timestamp].low, value);\n        groupedByTime[timestamp].close = value;\n      }\n    });\n    const candlestick = Object.entries(groupedByTime).map(([timestamp, ohlc]) => ({\n      x: parseInt(timestamp),\n      o: ohlc.open,\n      h: ohlc.high,\n      l: ohlc.low,\n      c: ohlc.close\n    }));\n    setCandlestickData(candlestick);\n  };\n  const renderChart = () => {\n    const ctx = document.getElementById(\"candlestickChart\").getContext(\"2d\");\n    new Chart(ctx, {\n      type: \"candlestick\",\n      data: {\n        datasets: [{\n          label: \"Liquidity Pool\",\n          data: candlestickData,\n          borderColor: \"#00ff00\",\n          borderWidth: 1\n        }]\n      },\n      options: {\n        responsive: true,\n        scales: {\n          x: {\n            type: \"time\",\n            time: {\n              unit: \"minute\"\n            }\n          },\n          y: {\n            beginAtZero: true\n          }\n        }\n      }\n    });\n  };\n  useEffect(() => {\n    if (candlestickData.length > 0) {\n      renderChart();\n    }\n  }, [candlestickData]);\n  const handleInputChange = event => {\n    setLpAddress(event.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"20px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Liquidity Pool Transactions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter LP Address\",\n        value: lpAddress,\n        onChange: handleInputChange,\n        style: {\n          width: \"400px\",\n          marginRight: \"10px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchTransactions,\n        children: \"Fetch Transactions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      id: \"candlestickChart\",\n      width: \"800\",\n      height: \"400\",\n      style: {\n        marginTop: \"20px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 166,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"myX7gTr2rkBIPOcMxHnFHa2mJrY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Web3","Chart","registerables","CandlestickController","CandlestickElement","OhlcController","OhlcElement","jsxDEV","_jsxDEV","register","App","_s","lpAddress","setLpAddress","transactions","setTransactions","candlestickData","setCandlestickData","errorMessage","setErrorMessage","nodeUrl","abi","anonymous","inputs","indexed","internalType","name","type","fetchTransactions","web3","contract","eth","Contract","events","getPastEvents","fromBlock","toBlock","processedTransactions","filter","event","returnValues","from","toLowerCase","to","map","value","direction","utils","fromWei","transactionHash","generateCandlestickData","error","console","groupedByTime","forEach","tx","timestamp","Math","floor","Date","now","parseFloat","open","high","low","close","max","min","candlestick","Object","entries","ohlc","x","parseInt","o","h","l","c","renderChart","ctx","document","getElementById","getContext","data","datasets","label","borderColor","borderWidth","options","responsive","scales","time","unit","y","beginAtZero","length","handleInputChange","target","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","onChange","width","marginRight","onClick","color","id","height","marginTop","_c","$RefreshReg$"],"sources":["D:/GitHub/taraxa-live-chart/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Web3 from \"web3\";\r\nimport { Chart, registerables } from \"chart.js\";\r\nimport {\r\n  CandlestickController,\r\n  CandlestickElement,\r\n  OhlcController,\r\n  OhlcElement,\r\n} from \"chartjs-chart-financial\";\r\n\r\nChart.register(\r\n  ...registerables,\r\n  CandlestickController,\r\n  CandlestickElement,\r\n  OhlcController,\r\n  OhlcElement\r\n);\r\n\r\nconst App = () => {\r\n  const [lpAddress, setLpAddress] = useState(\"\");\r\n  const [transactions, setTransactions] = useState([]);\r\n  const [candlestickData, setCandlestickData] = useState([]);\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n\r\n  const nodeUrl = \"http://46.4.138.103:7777\";\r\n\r\n  const abi = [\r\n    {\r\n      anonymous: false,\r\n      inputs: [\r\n        { indexed: true, internalType: \"address\", name: \"from\", type: \"address\" },\r\n        { indexed: true, internalType: \"address\", name: \"to\", type: \"address\" },\r\n        { indexed: false, internalType: \"uint256\", name: \"value\", type: \"uint256\" },\r\n      ],\r\n      name: \"Transfer\",\r\n      type: \"event\",\r\n    },\r\n  ];\r\n\r\n  const fetchTransactions = async () => {\r\n    if (!lpAddress) {\r\n      setErrorMessage(\"Please enter a valid LP address.\");\r\n      return;\r\n    }\r\n\r\n    setErrorMessage(\"\");\r\n    setTransactions([]);\r\n\r\n    try {\r\n      const web3 = new Web3(nodeUrl);\r\n      const contract = new web3.eth.Contract(abi, lpAddress);\r\n\r\n      const events = await contract.getPastEvents(\"Transfer\", {\r\n        fromBlock: \"earliest\",\r\n        toBlock: \"latest\",\r\n      });\r\n\r\n      const processedTransactions = events\r\n        .filter(\r\n          (event) =>\r\n            event.returnValues.from.toLowerCase() === lpAddress.toLowerCase() ||\r\n            event.returnValues.to.toLowerCase() === lpAddress.toLowerCase()\r\n        )\r\n        .map((event) => {\r\n          const { from, to, value } = event.returnValues;\r\n          const direction =\r\n            to.toLowerCase() === lpAddress.toLowerCase() ? \"Buy\" : \"Sell\";\r\n          return {\r\n            from,\r\n            to,\r\n            value: web3.utils.fromWei(value, \"ether\"),\r\n            direction,\r\n            transactionHash: event.transactionHash,\r\n          };\r\n        });\r\n\r\n      setTransactions(processedTransactions);\r\n      generateCandlestickData(processedTransactions);\r\n    } catch (error) {\r\n      console.error(\"Error fetching transactions:\", error);\r\n      setErrorMessage(\"Failed to fetch transactions. Check the LP address or ABI.\");\r\n    }\r\n  };\r\n\r\n  const generateCandlestickData = (transactions) => {\r\n    const groupedByTime = {}; // Group transactions by minute/hour (based on requirement)\r\n\r\n    transactions.forEach((tx) => {\r\n      const timestamp = Math.floor(Date.now() / 60000) * 60000; // Adjust to round time to minute/hour\r\n      const value = parseFloat(tx.value);\r\n\r\n      if (!groupedByTime[timestamp]) {\r\n        groupedByTime[timestamp] = {\r\n          open: value,\r\n          high: value,\r\n          low: value,\r\n          close: value,\r\n        };\r\n      } else {\r\n        groupedByTime[timestamp].high = Math.max(\r\n          groupedByTime[timestamp].high,\r\n          value\r\n        );\r\n        groupedByTime[timestamp].low = Math.min(\r\n          groupedByTime[timestamp].low,\r\n          value\r\n        );\r\n        groupedByTime[timestamp].close = value;\r\n      }\r\n    });\r\n\r\n    const candlestick = Object.entries(groupedByTime).map(([timestamp, ohlc]) => ({\r\n      x: parseInt(timestamp),\r\n      o: ohlc.open,\r\n      h: ohlc.high,\r\n      l: ohlc.low,\r\n      c: ohlc.close,\r\n    }));\r\n\r\n    setCandlestickData(candlestick);\r\n  };\r\n\r\n  const renderChart = () => {\r\n    const ctx = document.getElementById(\"candlestickChart\").getContext(\"2d\");\r\n\r\n    new Chart(ctx, {\r\n      type: \"candlestick\",\r\n      data: {\r\n        datasets: [\r\n          {\r\n            label: \"Liquidity Pool\",\r\n            data: candlestickData,\r\n            borderColor: \"#00ff00\",\r\n            borderWidth: 1,\r\n          },\r\n        ],\r\n      },\r\n      options: {\r\n        responsive: true,\r\n        scales: {\r\n          x: {\r\n            type: \"time\",\r\n            time: {\r\n              unit: \"minute\",\r\n            },\r\n          },\r\n          y: {\r\n            beginAtZero: true,\r\n          },\r\n        },\r\n      },\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (candlestickData.length > 0) {\r\n      renderChart();\r\n    }\r\n  }, [candlestickData]);\r\n\r\n  const handleInputChange = (event) => {\r\n    setLpAddress(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: \"20px\" }}>\r\n      <h1>Liquidity Pool Transactions</h1>\r\n      <div>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Enter LP Address\"\r\n          value={lpAddress}\r\n          onChange={handleInputChange}\r\n          style={{ width: \"400px\", marginRight: \"10px\" }}\r\n        />\r\n        <button onClick={fetchTransactions}>Fetch Transactions</button>\r\n      </div>\r\n      {errorMessage && <p style={{ color: \"red\" }}>{errorMessage}</p>}\r\n      <canvas id=\"candlestickChart\" width=\"800\" height=\"400\" style={{ marginTop: \"20px\" }} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}