{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\manager\\\\Documents\\\\GitHub\\\\taraxa-live-chart\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Web3 from 'web3';\nimport { Line } from 'react-chartjs-2';\nimport { Chart as ChartJS, LineElement, CategoryScale, LinearScale, PointElement, Tooltip, Legend } from 'chart.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(LineElement, CategoryScale, LinearScale, PointElement, Tooltip, Legend);\nconst App = () => {\n  _s();\n  const [address, setAddress] = useState('');\n  const [events, setEvents] = useState([]);\n  const [error, setError] = useState('');\n  const [logs, setLogs] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [chartData, setChartData] = useState(null);\n  const [tokenPrice, setTokenPrice] = useState(null);\n  const [poolAddress, setPoolAddress] = useState(null);\n  const pageSize = 10;\n\n  // List of factory contracts\n  const factoryContracts = [{\n    name: \"Harpswap\",\n    address: \"0x0000000000000000000000000000000000000000\",\n    abi: [{\n      constant: true,\n      inputs: [{\n        name: \"tokenA\",\n        type: \"address\"\n      }, {\n        name: \"tokenB\",\n        type: \"address\"\n      }],\n      name: \"getPair\",\n      outputs: [{\n        name: \"pair\",\n        type: \"address\"\n      }],\n      stateMutability: \"view\",\n      type: \"function\"\n    }]\n  }];\n  const referenceTokens = [\"0xdAC17F958D2ee523a2206206994597C13D831ec7\"]; // USDT as reference token\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      if (address) {\n        detectAvailablePool();\n        fetchTransferEvents();\n      }\n    }, 5000); // Poll every 5 seconds\n\n    return () => clearInterval(interval);\n  }, [address]);\n  const detectAvailablePool = async () => {\n    setLogs(prev => [...prev, 'Detecting available liquidity pools...']);\n    const web3 = new Web3('http://37.27.107.225:7777'); // Your node\n\n    for (const factory of factoryContracts) {\n      for (const refToken of referenceTokens) {\n        try {\n          const factoryContract = new web3.eth.Contract(factory.abi, factory.address);\n          const poolAddr = await factoryContract.methods.getPair(address, refToken).call();\n          if (poolAddr !== \"0x0000000000000000000000000000000000000000\") {\n            setLogs(prev => [...prev, `Pool found on ${factory.name}: ${poolAddr}`]);\n            setPoolAddress(poolAddr);\n            return; // Exit after finding the first pool\n          }\n        } catch (err) {\n          setLogs(prev => [...prev, `Error querying ${factory.name}: ${err.message}`]);\n        }\n      }\n    }\n    setLogs(prev => [...prev, \"No valid pool detected.\"]);\n  };\n  const fetchLiquidityPoolData = async (web3, poolAddr) => {\n    const poolContract = new web3.eth.Contract([{\n      constant: true,\n      inputs: [],\n      name: 'getReserves',\n      outputs: [{\n        name: '_reserve0',\n        type: 'uint112'\n      }, {\n        name: '_reserve1',\n        type: 'uint112'\n      }, {\n        name: '_blockTimestampLast',\n        type: 'uint32'\n      }],\n      type: 'function'\n    }, {\n      constant: true,\n      inputs: [],\n      name: 'token0',\n      outputs: [{\n        name: '',\n        type: 'address'\n      }],\n      type: 'function'\n    }, {\n      constant: true,\n      inputs: [],\n      name: 'token1',\n      outputs: [{\n        name: '',\n        type: 'address'\n      }],\n      type: 'function'\n    }], poolAddr);\n    const reserves = await poolContract.methods.getReserves().call();\n    const token0 = await poolContract.methods.token0().call();\n    const token1 = await poolContract.methods.token1().call();\n    return {\n      reserve0: Number(reserves._reserve0),\n      reserve1: Number(reserves._reserve1),\n      token0,\n      token1\n    };\n  };\n  const calculatePrice = (reserve0, reserve1, targetToken, token0, token1) => {\n    if (targetToken.toLowerCase() === token0.toLowerCase()) {\n      return reserve1 / reserve0;\n    } else if (targetToken.toLowerCase() === token1.toLowerCase()) {\n      return reserve0 / reserve1;\n    }\n    return null;\n  };\n  const fetchTransferEvents = async () => {\n    setError('');\n    setLogs([]);\n    if (!address || !poolAddress) {\n      setError('Please enter a valid contract address and ensure a pool is detected.');\n      return;\n    }\n    try {\n      const web3 = new Web3('http://37.27.107.225:7777'); // Your node\n\n      const poolData = await fetchLiquidityPoolData(web3, poolAddress);\n      const price = calculatePrice(poolData.reserve0, poolData.reserve1, address, poolData.token0, poolData.token1);\n      if (!price) {\n        throw new Error('Failed to calculate price. Target token may not be in the pool.');\n      }\n      setTokenPrice(price);\n      setLogs(prev => [...prev, `Current Token Price: ${price.toFixed(6)}`]);\n      const contract = new web3.eth.Contract([{\n        anonymous: false,\n        inputs: [{\n          indexed: true,\n          name: 'from',\n          type: 'address'\n        }, {\n          indexed: true,\n          name: 'to',\n          type: 'address'\n        }, {\n          indexed: false,\n          name: 'value',\n          type: 'uint256'\n        }],\n        name: 'Transfer',\n        type: 'event'\n      }], address);\n      const latestBlock = await web3.eth.getBlockNumber();\n      const fromBlock = Math.max(latestBlock - 500000, 0);\n      const pastEvents = await contract.getPastEvents('Transfer', {\n        fromBlock,\n        toBlock: 'latest'\n      });\n      const buyAndSellEvents = pastEvents.map(event => {\n        const {\n          from,\n          to,\n          value\n        } = event.returnValues;\n        let type = 'Unknown';\n        if (to.toLowerCase() === poolAddress.toLowerCase()) {\n          type = 'Sell';\n        } else if (from.toLowerCase() === poolAddress.toLowerCase()) {\n          type = 'Buy';\n        }\n        return {\n          from,\n          to,\n          value: BigInt(value).toString(),\n          transactionHash: event.transactionHash,\n          blockNumber: event.blockNumber,\n          timestamp: new Date().toISOString(),\n          type\n        };\n      });\n      setLogs(prev => [...prev, `Filtered ${buyAndSellEvents.length} Buy/Sell events.`]);\n      setEvents(prev => {\n        const allEvents = [...buyAndSellEvents, ...prev];\n        const uniqueEvents = Array.from(new Set(allEvents.map(e => e.transactionHash))).map(hash => allEvents.find(e => e.transactionHash === hash));\n        return uniqueEvents.slice(0, 1000); // Keep latest 1000 transactions\n      });\n      const chartLabels = buyAndSellEvents.map(e => e.timestamp);\n      const chartValues = buyAndSellEvents.map(e => parseFloat(e.value));\n      setChartData({\n        labels: chartLabels,\n        datasets: [{\n          label: 'Transaction Values',\n          data: chartValues,\n          borderColor: 'rgba(75, 192, 192, 1)',\n          borderWidth: 2,\n          fill: false\n        }]\n      });\n    } catch (err) {\n      setError(`Error occurred: ${err.message}`);\n      setLogs(prev => [...prev, `Error occurred: ${err.message}`]);\n    }\n  };\n  const paginatedEvents = events.slice((currentPage - 1) * pageSize, currentPage * pageSize);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '20px',\n      fontFamily: 'Arial, sans-serif'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Taraxa Live Chart Debugger\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: address,\n        onChange: e => setAddress(e.target.value),\n        placeholder: \"Enter Contract Address\",\n        style: {\n          width: '300px',\n          marginRight: '10px',\n          padding: '5px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchTransferEvents,\n        style: {\n          padding: '5px 10px'\n        },\n        children: \"Fetch Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Logs:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: logs.map((log, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: log\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Transfer Events:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        border: \"1\",\n        style: {\n          width: '100%',\n          borderCollapse: 'collapse'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"From\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"To\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Value\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Price/Token\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Timestamp\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Transaction Hash\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: paginatedEvents.map((event, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            style: {\n              backgroundColor: event.type === 'Sell' ? 'red' : event.type === 'Buy' ? 'green' : 'white',\n              color: 'white'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: event.from\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: event.to\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: event.value\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [\"$\", tokenPrice ? tokenPrice.toFixed(6) : 'N/A']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: event.timestamp\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: event.transactionHash\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 293,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: event.type\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setCurrentPage(prev => Math.max(prev - 1, 1)),\n          disabled: currentPage === 1,\n          children: \"Previous\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            margin: '0 10px'\n          },\n          children: [\"Page \", currentPage]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setCurrentPage(prev => prev * pageSize < events.length ? prev + 1 : prev),\n          disabled: currentPage * pageSize >= events.length,\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Transaction Chart:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 9\n      }, this), chartData ? /*#__PURE__*/_jsxDEV(Line, {\n        data: chartData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No chart data available.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 238,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"5ImH1IqXZm3w5rUEBakTYm/bm6Y=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Web3","Line","Chart","ChartJS","LineElement","CategoryScale","LinearScale","PointElement","Tooltip","Legend","jsxDEV","_jsxDEV","register","App","_s","address","setAddress","events","setEvents","error","setError","logs","setLogs","currentPage","setCurrentPage","chartData","setChartData","tokenPrice","setTokenPrice","poolAddress","setPoolAddress","pageSize","factoryContracts","name","abi","constant","inputs","type","outputs","stateMutability","referenceTokens","interval","setInterval","detectAvailablePool","fetchTransferEvents","clearInterval","prev","web3","factory","refToken","factoryContract","eth","Contract","poolAddr","methods","getPair","call","err","message","fetchLiquidityPoolData","poolContract","reserves","getReserves","token0","token1","reserve0","Number","_reserve0","reserve1","_reserve1","calculatePrice","targetToken","toLowerCase","poolData","price","Error","toFixed","contract","anonymous","indexed","latestBlock","getBlockNumber","fromBlock","Math","max","pastEvents","getPastEvents","toBlock","buyAndSellEvents","map","event","from","to","value","returnValues","BigInt","toString","transactionHash","blockNumber","timestamp","Date","toISOString","length","allEvents","uniqueEvents","Array","Set","e","hash","find","slice","chartLabels","chartValues","parseFloat","labels","datasets","label","data","borderColor","borderWidth","fill","paginatedEvents","style","padding","fontFamily","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","target","placeholder","width","marginRight","onClick","color","log","index","border","borderCollapse","backgroundColor","disabled","margin","_c","$RefreshReg$"],"sources":["C:/Users/manager/Documents/GitHub/taraxa-live-chart/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Web3 from 'web3';\r\nimport { Line } from 'react-chartjs-2';\r\nimport {\r\n  Chart as ChartJS,\r\n  LineElement,\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  Tooltip,\r\n  Legend,\r\n} from 'chart.js';\r\n\r\nChartJS.register(LineElement, CategoryScale, LinearScale, PointElement, Tooltip, Legend);\r\n\r\nconst App = () => {\r\n  const [address, setAddress] = useState('');\r\n  const [events, setEvents] = useState([]);\r\n  const [error, setError] = useState('');\r\n  const [logs, setLogs] = useState([]);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [chartData, setChartData] = useState(null);\r\n  const [tokenPrice, setTokenPrice] = useState(null);\r\n  const [poolAddress, setPoolAddress] = useState(null);\r\n  const pageSize = 10;\r\n\r\n  // List of factory contracts\r\n  const factoryContracts = [\r\n    {\r\n      name: \"Harpswap\",\r\n      address: \"0x0000000000000000000000000000000000000000\",\r\n      abi: [\r\n        {\r\n          constant: true,\r\n          inputs: [\r\n            { name: \"tokenA\", type: \"address\" },\r\n            { name: \"tokenB\", type: \"address\" },\r\n          ],\r\n          name: \"getPair\",\r\n          outputs: [{ name: \"pair\", type: \"address\" }],\r\n          stateMutability: \"view\",\r\n          type: \"function\",\r\n        },\r\n      ],\r\n    },\r\n  ];\r\n\r\n  const referenceTokens = [\"0xdAC17F958D2ee523a2206206994597C13D831ec7\"]; // USDT as reference token\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      if (address) {\r\n        detectAvailablePool();\r\n        fetchTransferEvents();\r\n      }\r\n    }, 5000); // Poll every 5 seconds\r\n\r\n    return () => clearInterval(interval);\r\n  }, [address]);\r\n\r\n  const detectAvailablePool = async () => {\r\n    setLogs((prev) => [...prev, 'Detecting available liquidity pools...']);\r\n    const web3 = new Web3('http://37.27.107.225:7777'); // Your node\r\n\r\n    for (const factory of factoryContracts) {\r\n      for (const refToken of referenceTokens) {\r\n        try {\r\n          const factoryContract = new web3.eth.Contract(factory.abi, factory.address);\r\n          const poolAddr = await factoryContract.methods.getPair(address, refToken).call();\r\n\r\n          if (poolAddr !== \"0x0000000000000000000000000000000000000000\") {\r\n            setLogs((prev) => [...prev, `Pool found on ${factory.name}: ${poolAddr}`]);\r\n            setPoolAddress(poolAddr);\r\n            return; // Exit after finding the first pool\r\n          }\r\n        } catch (err) {\r\n          setLogs((prev) => [...prev, `Error querying ${factory.name}: ${err.message}`]);\r\n        }\r\n      }\r\n    }\r\n\r\n    setLogs((prev) => [...prev, \"No valid pool detected.\"]);\r\n  };\r\n\r\n  const fetchLiquidityPoolData = async (web3, poolAddr) => {\r\n    const poolContract = new web3.eth.Contract(\r\n      [\r\n        {\r\n          constant: true,\r\n          inputs: [],\r\n          name: 'getReserves',\r\n          outputs: [\r\n            { name: '_reserve0', type: 'uint112' },\r\n            { name: '_reserve1', type: 'uint112' },\r\n            { name: '_blockTimestampLast', type: 'uint32' },\r\n          ],\r\n          type: 'function',\r\n        },\r\n        {\r\n          constant: true,\r\n          inputs: [],\r\n          name: 'token0',\r\n          outputs: [{ name: '', type: 'address' }],\r\n          type: 'function',\r\n        },\r\n        {\r\n          constant: true,\r\n          inputs: [],\r\n          name: 'token1',\r\n          outputs: [{ name: '', type: 'address' }],\r\n          type: 'function',\r\n        },\r\n      ],\r\n      poolAddr\r\n    );\r\n\r\n    const reserves = await poolContract.methods.getReserves().call();\r\n    const token0 = await poolContract.methods.token0().call();\r\n    const token1 = await poolContract.methods.token1().call();\r\n\r\n    return {\r\n      reserve0: Number(reserves._reserve0),\r\n      reserve1: Number(reserves._reserve1),\r\n      token0,\r\n      token1,\r\n    };\r\n  };\r\n\r\n  const calculatePrice = (reserve0, reserve1, targetToken, token0, token1) => {\r\n    if (targetToken.toLowerCase() === token0.toLowerCase()) {\r\n      return reserve1 / reserve0;\r\n    } else if (targetToken.toLowerCase() === token1.toLowerCase()) {\r\n      return reserve0 / reserve1;\r\n    }\r\n    return null;\r\n  };\r\n\r\n  const fetchTransferEvents = async () => {\r\n    setError('');\r\n    setLogs([]);\r\n\r\n    if (!address || !poolAddress) {\r\n      setError('Please enter a valid contract address and ensure a pool is detected.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const web3 = new Web3('http://37.27.107.225:7777'); // Your node\r\n\r\n      const poolData = await fetchLiquidityPoolData(web3, poolAddress);\r\n      const price = calculatePrice(poolData.reserve0, poolData.reserve1, address, poolData.token0, poolData.token1);\r\n\r\n      if (!price) {\r\n        throw new Error('Failed to calculate price. Target token may not be in the pool.');\r\n      }\r\n\r\n      setTokenPrice(price);\r\n      setLogs((prev) => [...prev, `Current Token Price: ${price.toFixed(6)}`]);\r\n\r\n      const contract = new web3.eth.Contract(\r\n        [\r\n          {\r\n            anonymous: false,\r\n            inputs: [\r\n              { indexed: true, name: 'from', type: 'address' },\r\n              { indexed: true, name: 'to', type: 'address' },\r\n              { indexed: false, name: 'value', type: 'uint256' },\r\n            ],\r\n            name: 'Transfer',\r\n            type: 'event',\r\n          },\r\n        ],\r\n        address\r\n      );\r\n\r\n      const latestBlock = await web3.eth.getBlockNumber();\r\n      const fromBlock = Math.max(latestBlock - 500000, 0);\r\n\r\n      const pastEvents = await contract.getPastEvents('Transfer', {\r\n        fromBlock,\r\n        toBlock: 'latest',\r\n      });\r\n\r\n      const buyAndSellEvents = pastEvents.map((event) => {\r\n        const { from, to, value } = event.returnValues;\r\n        let type = 'Unknown';\r\n\r\n        if (to.toLowerCase() === poolAddress.toLowerCase()) {\r\n          type = 'Sell';\r\n        } else if (from.toLowerCase() === poolAddress.toLowerCase()) {\r\n          type = 'Buy';\r\n        }\r\n\r\n        return {\r\n          from,\r\n          to,\r\n          value: BigInt(value).toString(),\r\n          transactionHash: event.transactionHash,\r\n          blockNumber: event.blockNumber,\r\n          timestamp: new Date().toISOString(),\r\n          type,\r\n        };\r\n      });\r\n\r\n      setLogs((prev) => [...prev, `Filtered ${buyAndSellEvents.length} Buy/Sell events.`]);\r\n\r\n      setEvents((prev) => {\r\n        const allEvents = [...buyAndSellEvents, ...prev];\r\n        const uniqueEvents = Array.from(new Set(allEvents.map((e) => e.transactionHash)))\r\n          .map((hash) => allEvents.find((e) => e.transactionHash === hash));\r\n        return uniqueEvents.slice(0, 1000); // Keep latest 1000 transactions\r\n      });\r\n\r\n      const chartLabels = buyAndSellEvents.map((e) => e.timestamp);\r\n      const chartValues = buyAndSellEvents.map((e) => parseFloat(e.value));\r\n\r\n      setChartData({\r\n        labels: chartLabels,\r\n        datasets: [\r\n          {\r\n            label: 'Transaction Values',\r\n            data: chartValues,\r\n            borderColor: 'rgba(75, 192, 192, 1)',\r\n            borderWidth: 2,\r\n            fill: false,\r\n          },\r\n        ],\r\n      });\r\n    } catch (err) {\r\n      setError(`Error occurred: ${err.message}`);\r\n      setLogs((prev) => [...prev, `Error occurred: ${err.message}`]);\r\n    }\r\n  };\r\n\r\n  const paginatedEvents = events.slice((currentPage - 1) * pageSize, currentPage * pageSize);\r\n\r\n  return (\r\n    <div style={{ padding: '20px', fontFamily: 'Arial, sans-serif' }}>\r\n      <h1>Taraxa Live Chart Debugger</h1>\r\n\r\n      <div>\r\n        <input\r\n          type=\"text\"\r\n          value={address}\r\n          onChange={(e) => setAddress(e.target.value)}\r\n          placeholder=\"Enter Contract Address\"\r\n          style={{ width: '300px', marginRight: '10px', padding: '5px' }}\r\n        />\r\n        <button onClick={fetchTransferEvents} style={{ padding: '5px 10px' }}>\r\n          Fetch Data\r\n        </button>\r\n      </div>\r\n\r\n      {error && <p style={{ color: 'red' }}>{error}</p>}\r\n\r\n      <div>\r\n        <h3>Logs:</h3>\r\n        <ul>\r\n          {logs.map((log, index) => (\r\n            <li key={index}>{log}</li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n\r\n      <div>\r\n        <h3>Transfer Events:</h3>\r\n        <table border=\"1\" style={{ width: '100%', borderCollapse: 'collapse' }}>\r\n          <thead>\r\n            <tr>\r\n              <th>From</th>\r\n              <th>To</th>\r\n              <th>Value</th>\r\n              <th>Price/Token</th>\r\n              <th>Timestamp</th>\r\n              <th>Transaction Hash</th>\r\n              <th>Type</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {paginatedEvents.map((event, index) => (\r\n              <tr\r\n                key={index}\r\n                style={{\r\n                  backgroundColor: event.type === 'Sell' ? 'red' : event.type === 'Buy' ? 'green' : 'white',\r\n                  color: 'white',\r\n                }}\r\n              >\r\n                <td>{event.from}</td>\r\n                <td>{event.to}</td>\r\n                <td>{event.value}</td>\r\n                <td>${tokenPrice ? tokenPrice.toFixed(6) : 'N/A'}</td>\r\n                <td>{event.timestamp}</td>\r\n                <td>{event.transactionHash}</td>\r\n                <td>{event.type}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n        <div>\r\n          <button\r\n            onClick={() => setCurrentPage((prev) => Math.max(prev - 1, 1))}\r\n            disabled={currentPage === 1}\r\n          >\r\n            Previous\r\n          </button>\r\n          <span style={{ margin: '0 10px' }}>Page {currentPage}</span>\r\n          <button\r\n            onClick={() =>\r\n              setCurrentPage((prev) =>\r\n                prev * pageSize < events.length ? prev + 1 : prev\r\n              )\r\n            }\r\n            disabled={currentPage * pageSize >= events.length}\r\n          >\r\n            Next\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <div>\r\n        <h3>Transaction Chart:</h3>\r\n        {chartData ? (\r\n          <Line data={chartData} />\r\n        ) : (\r\n          <p>No chart data available.</p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}